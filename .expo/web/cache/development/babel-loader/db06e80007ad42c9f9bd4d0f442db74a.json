{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SP2 = function SP2(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rating = _useState2[0],\n      Setrate = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      landLine = _useState4[0],\n      Setland_line = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      verificationDocuments = _useState6[0],\n      SetVerificationDocuments = _useState6[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      username = _route$params.username,\n      phone = _route$params.phone,\n      email = _route$params.email,\n      password = _route$params.password,\n      passwordConfirm = _route$params.passwordConfirm,\n      nationalID = _route$params.nationalID,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city,\n      role = _route$params.role,\n      type = _route$params.type,\n      workingHours = _route$params.workingHours,\n      finishingHour = _route$params.finishingHour,\n      maxNumberClients = _route$params.maxNumberClients,\n      offDays = _route$params.offDays,\n      ratePerHour = _route$params.ratePerHour;\n\n  function Next() {\n    navigation.navigate(\"SPFinal\", {\n      name: name,\n      username: username,\n      phone: phone,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      nationalID: nationalID,\n      country: country,\n      city: city,\n      address: address,\n      role: role,\n      type: type,\n      rating: rating,\n      workingHours: workingHours,\n      finishingHour: finishingHour,\n      maxNumberClients: maxNumberClients,\n      offDays: offDays,\n      ratePerHour: ratePerHour,\n      landLine: landLine,\n      verificationDocuments: verificationDocuments\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container1,\n    children: [_jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter rating\",\n        onChangeText: function onChangeText(rating) {\n          return Setrate(rating);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter landLine\",\n        onChangeText: function onChangeText(landLine) {\n          return Setland_line(landLine);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter verificationDocuments\",\n        onChangeText: function onChangeText(verificationDocuments) {\n          return SetVerificationDocuments(verificationDocuments);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: Next,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Next\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container1: {\n    backgroundColor: \"rgb(245, 245, 245)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 120,\n    paddingBottom: 60\n  },\n  input: {\n    flexDirection: \"row\"\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 250,\n    height: 40,\n    borderColor: \"rgb(48, 71, 94)\",\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    color: \"black\",\n    marginVertical: 10\n  },\n  errormsg: {\n    bottom: 5,\n    paddingRight: 199,\n    color: \"red\"\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: \"rgb(240, 84, 84)\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginBottom: 30,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 15,\n    right: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/SP2.js"],"names":["React","useState","SP2","route","navigation","rating","Setrate","landLine","Setland_line","verificationDocuments","SetVerificationDocuments","params","name","username","phone","email","password","passwordConfirm","nationalID","address","country","city","role","type","workingHours","finishingHour","maxNumberClients","offDays","ratePerHour","Next","navigate","styles","container1","input","inputtext1","e","handelRequiredType","nativeEvent","text","buttoncontainer1","buttontext1","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingTop","paddingBottom","flexDirection","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","fontSize","color","marginVertical","errormsg","bottom","paddingRight","marginTop","marginBottom","paddingLeft","textAlign","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;AAYA,OAAO,IAAMC,GAAG,GAAE,SAALA,GAAK,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC3C,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,OAAf;;AACA,mBAAiCL,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAA0DP,QAAQ,CAAC,EAAD,CAAlE;AAAA;AAAA,MAAOQ,qBAAP;AAAA,MAA6BC,wBAA7B;;AAEA,sBAkBIP,KAAK,CAACQ,MAlBV;AAAA,MACEC,IADF,iBACEA,IADF;AAAA,MAEEC,QAFF,iBAEEA,QAFF;AAAA,MAGEC,KAHF,iBAGEA,KAHF;AAAA,MAIEC,KAJF,iBAIEA,KAJF;AAAA,MAKEC,QALF,iBAKEA,QALF;AAAA,MAMEC,eANF,iBAMEA,eANF;AAAA,MAOEC,UAPF,iBAOEA,UAPF;AAAA,MAQEC,OARF,iBAQEA,OARF;AAAA,MASEC,OATF,iBASEA,OATF;AAAA,MAUEC,IAVF,iBAUEA,IAVF;AAAA,MAWEC,IAXF,iBAWEA,IAXF;AAAA,MAYEC,IAZF,iBAYEA,IAZF;AAAA,MAaEC,YAbF,iBAaEA,YAbF;AAAA,MAcEC,aAdF,iBAcEA,aAdF;AAAA,MAeEC,gBAfF,iBAeEA,gBAfF;AAAA,MAgBEC,OAhBF,iBAgBEA,OAhBF;AAAA,MAiBEC,WAjBF,iBAiBEA,WAjBF;;AAoBA,WAASC,IAAT,GAAgB;AACdzB,IAAAA,UAAU,CAAC0B,QAAX,CAAoB,SAApB,EAA+B;AAC7BlB,MAAAA,IAAI,EAAEA,IADuB;AAE7BC,MAAAA,QAAQ,EAAEA,QAFmB;AAG7BC,MAAAA,KAAK,EAAEA,KAHsB;AAI7BC,MAAAA,KAAK,EAAEA,KAJsB;AAK7BC,MAAAA,QAAQ,EAAEA,QALmB;AAM7BC,MAAAA,eAAe,EAAEA,eANY;AAO7BC,MAAAA,UAAU,EAAEA,UAPiB;AAQ7BE,MAAAA,OAAO,EAAEA,OARoB;AAS7BC,MAAAA,IAAI,EAAEA,IATuB;AAU7BF,MAAAA,OAAO,EAAEA,OAVoB;AAW7BG,MAAAA,IAAI,EAAEA,IAXuB;AAY7BC,MAAAA,IAAI,EAAEA,IAZuB;AAa7BlB,MAAAA,MAAM,EAAEA,MAbqB;AAc7BmB,MAAAA,YAAY,EAAEA,YAde;AAe7BC,MAAAA,aAAa,EAAEA,aAfc;AAgB7BC,MAAAA,gBAAgB,EAAEA,gBAhBW;AAiB7BC,MAAAA,OAAO,EAAEA,OAjBoB;AAkB7BC,MAAAA,WAAW,EAAEA,WAlBgB;AAmB7BrB,MAAAA,QAAQ,EAAEA,QAnBmB;AAoB7BE,MAAAA,qBAAqB,EAAEA;AApBM,KAA/B;AAsBD;;AACD,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACC,UAApB;AAAA,eAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA,gBACE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,UADhB;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,YAAY,EAAE,sBAAC7B,MAAD;AAAA,iBAAYC,OAAO,CAACD,MAAD,CAAnB;AAAA,SAHhB;AAIE,QAAA,YAAY,EAAE,sBAAC8B,CAAD;AAAA,iBAAOC,kBAAkB,CAACD,CAAC,CAACE,WAAF,CAAcC,IAAf,CAAzB;AAAA,SAJhB;AAKE,QAAA,oBAAoB,EAAC;AALvB;AADF,MAFF,EAaE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACE,KAApB;AAAA,gBACE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,UADhB;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,YAAY,EAAE,sBAAC3B,QAAD;AAAA,iBAAcC,YAAY,CAACD,QAAD,CAA1B;AAAA,SAHhB;AAIE,QAAA,YAAY,EAAE,sBAAC4B,CAAD;AAAA,iBAAOC,kBAAkB,CAACD,CAAC,CAACE,WAAF,CAAcC,IAAf,CAAzB;AAAA,SAJhB;AAKE,QAAA,oBAAoB,EAAC;AALvB;AADF,MAbF,EAyBE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACE,KAApB;AAAA,gBACE,KAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,UADhB;AAEE,QAAA,WAAW,EAAC,6BAFd;AAGE,QAAA,YAAY,EAAE,sBAACzB,qBAAD;AAAA,iBAA2BC,wBAAwB,CAACD,qBAAD,CAAnD;AAAA,SAHhB;AAIE,QAAA,YAAY,EAAE,sBAAC0B,CAAD;AAAA,iBAAOC,kBAAkB,CAACD,CAAC,CAACE,WAAF,CAAcC,IAAf,CAAzB;AAAA,SAJhB;AAKE,QAAA,oBAAoB,EAAC;AALvB;AADF,MAzBF,EAmCE,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEP,MAAM,CAACQ,gBAAhC;AAAkD,MAAA,OAAO,EAAEV,IAA3D;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACS,WAApB;AAAA;AAAA;AADF,MAnCF;AAAA,IADF;AA0CD,CA3FM;AA4FP,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,eAAe,EAAE,oBADP;AAEVC,IAAAA,IAAI,EAAE,CAFI;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,UAAU,EAAE,GALF;AAMVC,IAAAA,aAAa,EAAE;AANL,GADmB;AAS/Bf,EAAAA,KAAK,EAAE;AACLgB,IAAAA,aAAa,EAAE;AADV,GATwB;AAY/Bf,EAAAA,UAAU,EAAE;AACVgB,IAAAA,YAAY,EAAE,CADJ;AAEVC,IAAAA,KAAK,EAAE,GAFG;AAGVC,IAAAA,MAAM,EAAE,EAHE;AAIVC,IAAAA,WAAW,EAAE,iBAJH;AAKVC,IAAAA,WAAW,EAAE,CALH;AAMVC,IAAAA,iBAAiB,EAAE,EANT;AAOVC,IAAAA,QAAQ,EAAE,EAPA;AAQVC,IAAAA,KAAK,EAAE,OARG;AASVC,IAAAA,cAAc,EAAE;AATN,GAZmB;AAuB/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,YAAY,EAAE,GAFN;AAGRJ,IAAAA,KAAK,EAAE;AAHC,GAvBqB;AA4B/BlB,EAAAA,gBAAgB,EAAE;AAChBW,IAAAA,YAAY,EAAE,EADE;AAEhBC,IAAAA,KAAK,EAAE,GAFS;AAGhBC,IAAAA,MAAM,EAAE,EAHQ;AAIhBT,IAAAA,eAAe,EAAE,kBAJD;AAKhBI,IAAAA,UAAU,EAAE,CALI;AAMhBF,IAAAA,cAAc,EAAE,QANA;AAOhBiB,IAAAA,SAAS,EAAE,EAPK;AAQhBC,IAAAA,YAAY,EAAE,EARE;AAShBC,IAAAA,WAAW,EAAE;AATG,GA5Ba;AAuC/BxB,EAAAA,WAAW,EAAE;AACXyB,IAAAA,SAAS,EAAE,QADA;AAEXR,IAAAA,KAAK,EAAE,OAFI;AAGXD,IAAAA,QAAQ,EAAE,EAHC;AAIXU,IAAAA,KAAK,EAAE;AAJI;AAvCkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\n\r\nimport { TextInput, ScrollView } from \"react-native\";\r\n\r\nexport const SP2= ({ route, navigation }) => {\r\n  const [rating, Setrate] = useState(\"\");\r\n  const [landLine, Setland_line] = useState(\"\");\r\n  const [verificationDocuments,SetVerificationDocuments ] = useState(\"\");\r\n\r\n  const {\r\n    name,\r\n    username,\r\n    phone,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    nationalID,\r\n    address,\r\n    country,\r\n    city,\r\n    role,\r\n    type,\r\n    workingHours,\r\n    finishingHour,\r\n    maxNumberClients,\r\n    offDays,\r\n    ratePerHour,\r\n  } = route.params;\r\n\r\n  function Next() {\r\n    navigation.navigate(\"SPFinal\", {\r\n      name: name,\r\n      username: username,\r\n      phone: phone,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      nationalID: nationalID,\r\n      country: country,\r\n      city: city,\r\n      address: address,\r\n      role: role,\r\n      type: type,\r\n      rating: rating,\r\n      workingHours: workingHours,\r\n      finishingHour: finishingHour,\r\n      maxNumberClients: maxNumberClients,\r\n      offDays: offDays,\r\n      ratePerHour: ratePerHour,\r\n      landLine: landLine,\r\n      verificationDocuments: verificationDocuments,\r\n    });\r\n  }\r\n  return (\r\n    <View style={styles.container1}>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter rating\"\r\n          onChangeText={(rating) => Setrate(rating)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter landLine\"\r\n          onChangeText={(landLine) => Setland_line(landLine)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n      \r\n\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter verificationDocuments\"\r\n          onChangeText={(verificationDocuments) => SetVerificationDocuments(verificationDocuments)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={Next}>\r\n        <Text style={styles.buttontext1}>Next</Text>\r\n      </TouchableOpacity>\r\n\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container1: {\r\n    backgroundColor: \"rgb(245, 245, 245)\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop: 120,\r\n    paddingBottom: 60,\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n  },\r\n  inputtext1: {\r\n    borderRadius: 9,\r\n    width: 250,\r\n    height: 40,\r\n    borderColor: \"rgb(48, 71, 94)\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n  errormsg: {\r\n    bottom: 5,\r\n    paddingRight: 199,\r\n    color: \"red\",\r\n  },\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 45,\r\n    backgroundColor: \"rgb(240, 84, 84)\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    right: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}