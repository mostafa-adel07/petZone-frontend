{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var PetDetection = function PetDetection() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var addImage = function addImage() {\n    var _image;\n\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            _image = _context.sent;\n\n            if (!_image.cancelled) {\n              setImage(_image.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      result = _useState4[0],\n      setresult = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pettype = _useState6[0],\n      setpettype = _useState6[1];\n\n  axios.get(\"\", {\n    headers: {\n      Cookie: \"cookie1=value; cookie2=value; cookie3=value;\",\n      Authorization: \"Bearer my-token\"\n    },\n    withCredentials: true\n  }).then(function (res) {\n    setpettype(res);\n  }).catch(function (err) {\n    console.log(err);\n  });\n\n  function seeresult() {\n    setresult(true);\n    axios.post(\"http://127.0.0.1:3000/\", {\n      headers: {\n        Cookie: \"cookie1=value; cookie2=value; cookie3=value;\",\n        Authorization: \"Bearer my-token\"\n      },\n      withCredentials: true,\n      image: image\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: styles.container2,\n      children: [_jsx(View, {\n        style: styles.header,\n        children: _jsx(Text, {\n          style: styles.input,\n          children: \"Know your pet's type\"\n        })\n      }), _jsxs(View, {\n        style: imageUploaderStyles.container,\n        children: [image && _jsx(Image, {\n          source: {\n            uri: image\n          },\n          style: {\n            width: 200,\n            height: 200\n          }\n        }), _jsx(View, {\n          style: imageUploaderStyles.uploadBtnContainer,\n          children: _jsxs(TouchableOpacity, {\n            onPress: addImage,\n            style: imageUploaderStyles.uploadBtn,\n            children: [_jsxs(Text, {\n              children: [image ? \"Edit\" : \"Upload\", \" Image\"]\n            }), _jsx(AntDesign, {\n              name: \"camera\",\n              size: 20,\n              color: \"black\"\n            })]\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttoncontainer1,\n        onPress: seeresult,\n        children: _jsx(Text, {\n          style: styles.buttontext1,\n          children: \"Submit\"\n        })\n      }), result == true && image != null ? _jsxs(Text, {\n        style: styles.input1,\n        children: [pettype, \" \"]\n      }) : _jsx(View, {})]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container2: {\n    flex: 1,\n    marginBottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    color: \"#084594\",\n    top: 35,\n    textAlign: \"center\",\n    fontSize: 28,\n    marginTop: 0,\n    fontWeight: \"bold\"\n  },\n  header: {\n    backgroundColor: \"rgba(253,239,197,1)\",\n    height: 100,\n    width: 410,\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30,\n    alignItems: \"center\"\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 200,\n    height: 50,\n    backgroundColor: \"#ED7354\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 120,\n    paddingLeft: 50,\n    marginLeft: 10\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 20,\n    right: 28,\n    fontWeight: \"bold\"\n  },\n  signuptext: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 18,\n    flexDirection: \"row\",\n    marginTop: 20\n  },\n  input1: {\n    color: \"#084594\",\n    top: 35,\n    textAlign: \"center\",\n    fontSize: 28,\n    marginTop: 0,\n    fontWeight: \"bold\"\n  }\n});\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    top: 60,\n    backgroundColor: \"#efefef\",\n    position: \"relative\",\n    borderRadius: 999,\n    overflow: \"hidden\"\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"lightgray\",\n    width: \"100%\",\n    height: \"25%\"\n  },\n  uploadBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/PetZone1/petZone/components/screens/PetDetection.js"],"names":["React","useState","useEffect","AntDesign","ImagePicker","axios","PetDetection","image","setImage","addImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_image","cancelled","uri","result","setresult","pettype","setpettype","get","headers","Cookie","Authorization","withCredentials","then","res","catch","err","console","log","seeresult","post","response","error","styles","container2","header","input","imageUploaderStyles","container","width","height","uploadBtnContainer","uploadBtn","buttoncontainer1","buttontext1","input1","StyleSheet","create","flex","marginBottom","alignItems","backgroundColor","color","top","textAlign","fontSize","marginTop","fontWeight","borderBottomLeftRadius","borderBottomRightRadius","borderRadius","paddingTop","justifyContent","paddingLeft","marginLeft","right","signuptext","flexDirection","elevation","position","overflow","opacity","bottom","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  View,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport axios from \"axios\";\r\nexport const PetDetection = () => {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const addImage = async () => {\r\n    let _image = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!_image.cancelled) {\r\n      setImage(_image.uri);\r\n    }\r\n  };\r\n  const [result, setresult] = useState(false);\r\n  const [pettype, setpettype] = useState(\"\");\r\n  axios\r\n    .get(\"\", {\r\n      headers: {\r\n        Cookie: \"cookie1=value; cookie2=value; cookie3=value;\",\r\n        Authorization: \"Bearer my-token\",\r\n      },\r\n      withCredentials: true,\r\n    })\r\n    .then((res) => {\r\n      setpettype(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n  function seeresult() {\r\n    setresult(true);\r\n    axios\r\n      .post(\"http://127.0.0.1:3000/\", {\r\n        headers: {\r\n          Cookie: \"cookie1=value; cookie2=value; cookie3=value;\",\r\n          Authorization: \"Bearer my-token\",\r\n        },\r\n        withCredentials: true,\r\n        image: image,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.container2}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.input}>Know your pet's type</Text>\r\n        </View>\r\n        <View style={imageUploaderStyles.container}>\r\n          {image && (\r\n            <Image\r\n              source={{ uri: image }}\r\n              style={{ width: 200, height: 200 }}\r\n            />\r\n          )}\r\n          <View style={imageUploaderStyles.uploadBtnContainer}>\r\n            <TouchableOpacity\r\n              onPress={addImage}\r\n              style={imageUploaderStyles.uploadBtn}\r\n            >\r\n              <Text>{image ? \"Edit\" : \"Upload\"} Image</Text>\r\n              <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <TouchableOpacity style={styles.buttoncontainer1} onPress={seeresult}>\r\n          <Text style={styles.buttontext1}>Submit</Text>\r\n        </TouchableOpacity>\r\n        {result == true && image != null ? (\r\n          <Text style={styles.input1}>{pettype} </Text>\r\n        ) : (\r\n          <View></View>\r\n        )}\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container2: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  input: {\r\n    color: \"#084594\",\r\n    top: 35,\r\n    textAlign: \"center\",\r\n    fontSize: 28,\r\n    marginTop: 0,\r\n    fontWeight: \"bold\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"rgba(253,239,197,1)\",\r\n    height: 100,\r\n    width: 410,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n    alignItems: \"center\",\r\n  },\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 200,\r\n    height: 50,\r\n    backgroundColor: \"#ED7354\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 120,\r\n    paddingLeft: 50,\r\n    marginLeft: 10,\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    right: 28,\r\n    fontWeight: \"bold\",\r\n  },\r\n  signuptext: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 18,\r\n    flexDirection: \"row\",\r\n    marginTop: 20,\r\n  },\r\n  input1: {\r\n    color: \"#084594\",\r\n    top: 35,\r\n    textAlign: \"center\",\r\n    fontSize: 28,\r\n    marginTop: 0,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\nconst imageUploaderStyles = StyleSheet.create({\r\n  container: {\r\n    elevation: 2,\r\n    height: 200,\r\n    width: 200,\r\n    top: 60,\r\n    backgroundColor: \"#efefef\",\r\n    position: \"relative\",\r\n    borderRadius: 999,\r\n    overflow: \"hidden\",\r\n  },\r\n  uploadBtnContainer: {\r\n    opacity: 0.7,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"lightgray\",\r\n    width: \"100%\",\r\n    height: \"25%\",\r\n  },\r\n  uploadBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}