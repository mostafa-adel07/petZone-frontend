{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SP2 } from \"./SP2\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SP1 = function SP1(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      Settype = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ratePerHour = _useState4[0],\n      SetratePerHour = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      workingHours = _useState6[0],\n      Setworking_hours = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      offDays = _useState8[0],\n      Setoff_days = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      maxNumberClients = _useState10[0],\n      SetmaxNumberClients = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      finishingHour = _useState12[0],\n      SetfinishingHour = _useState12[1];\n\n  var _React$useState = React.useState({\n    isRequiredType: true,\n    isRequiredRate: true,\n    isRequiredWorking_hours: true,\n    isRequiredOff_days: true,\n    isRequiredLand_line: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data2 = _React$useState2[0],\n      setData2 = _React$useState2[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      username = _route$params.username,\n      phone = _route$params.phone,\n      email = _route$params.email,\n      password = _route$params.password,\n      passwordConfirm = _route$params.passwordConfirm,\n      nationalID = _route$params.nationalID,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city,\n      role = _route$params.role;\n\n  function Next() {\n    navigation.navigate(\"SP2\", {\n      name: name,\n      username: username,\n      phone: phone,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      nationalID: nationalID,\n      country: country,\n      city: city,\n      address: address,\n      role: role,\n      type: type,\n      workingHours: workingHours,\n      finishingHour: finishingHour,\n      maxNumberClients: maxNumberClients,\n      offDays: offDays,\n      ratePerHour: ratePerHour\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container1,\n    children: [_jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter Type\",\n        onChangeText: function onChangeText(type) {\n          return Settype(type);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), data2.isRequiredType ? null : _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        style: styles.errormsg,\n        children: \"Reuired Input\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter ratePerHour\",\n        onChangeText: function onChangeText(type) {\n          return SetratePerHour(type);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter maxNumberClients\",\n        onChangeText: function onChangeText(type) {\n          return SetmaxNumberClients(type);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter finishingHour\",\n        onChangeText: function onChangeText(type) {\n          return SetfinishingHour(type);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredType(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter Working_Hours\",\n        onChangeText: function onChangeText(working_hours) {\n          return Setworking_hours(working_hours);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredWorking_hours(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(View, {\n      style: styles.input,\n      children: _jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter Off_Days\",\n        onChangeText: function onChangeText(off_days) {\n          return Setoff_days(off_days);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredOff_days(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: Next,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Next\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container1: {\n    backgroundColor: \"#F5F5F5\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 120,\n    paddingBottom: 60\n  },\n  input: {\n    flexDirection: \"row\"\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 250,\n    height: 40,\n    borderColor: \"#F05454\",\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    color: \"black\",\n    marginVertical: 10\n  },\n  errormsg: {\n    bottom: 5,\n    paddingRight: 199,\n    color: \"red\"\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: \"rgb(48, 71, 94)\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginBottom: 30,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 20,\n    right: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/serviceProvider/SP1.js"],"names":["React","useState","SP2","SP1","route","navigation","type","Settype","ratePerHour","SetratePerHour","workingHours","Setworking_hours","offDays","Setoff_days","maxNumberClients","SetmaxNumberClients","finishingHour","SetfinishingHour","isRequiredType","isRequiredRate","isRequiredWorking_hours","isRequiredOff_days","isRequiredLand_line","data2","setData2","params","name","username","phone","email","password","passwordConfirm","nationalID","address","country","city","role","Next","navigate","styles","container1","input","inputtext1","e","handelRequiredType","nativeEvent","text","error","errormsg","working_hours","handelRequiredWorking_hours","off_days","handelRequiredOff_days","buttoncontainer1","buttontext1","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingTop","paddingBottom","flexDirection","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","fontSize","color","marginVertical","bottom","paddingRight","marginTop","marginBottom","paddingLeft","textAlign","right"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { TextInput, ScrollView } from \"react-native\";\r\nimport {SP2} from \"./SP2\"\r\n\r\nexport const SP1 = ({ route, navigation }) => {\r\n  const [type, Settype] = useState(\"\");\r\n  const [ratePerHour, SetratePerHour] = useState(\"\");\r\n  const [workingHours, Setworking_hours] = useState(\"\");\r\n  const [offDays, Setoff_days] = useState(\"\");\r\n  const [maxNumberClients, SetmaxNumberClients] = useState(\"\");\r\n  const [finishingHour, SetfinishingHour] = useState(\"\");\r\n\r\n  const [data2, setData2] = React.useState({\r\n    isRequiredType: true,\r\n    isRequiredRate: true,\r\n    isRequiredWorking_hours: true,\r\n    isRequiredOff_days: true,\r\n    isRequiredLand_line: true,\r\n  });\r\n  const {\r\n    name,\r\n    username,\r\n    phone,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    nationalID,\r\n    address,\r\n    country,\r\n    city,\r\n    role,\r\n  } = route.params;\r\n\r\n  function Next() {\r\n    navigation.navigate(\"SP2\", {\r\n      name: name,\r\n      username: username,\r\n      phone: phone,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      nationalID: nationalID,\r\n      country: country,\r\n      city: city,\r\n      address: address,\r\n      role: role,\r\n      type: type,\r\n      workingHours: workingHours,\r\n      finishingHour: finishingHour,\r\n      maxNumberClients: maxNumberClients,\r\n      offDays: offDays,\r\n      ratePerHour: ratePerHour,\r\n    });\r\n  }\r\n  return (\r\n    <View style={styles.container1}>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Type\"\r\n          onChangeText={(type) => Settype(type)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n      {data2.isRequiredType ? null : (\r\n        <View style={styles.error}>\r\n          <Text style={styles.errormsg}>Reuired Input</Text>\r\n        </View>\r\n      )}\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter ratePerHour\"\r\n          onChangeText={(type) => SetratePerHour(type)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter maxNumberClients\"\r\n          onChangeText={(type) => SetmaxNumberClients(type)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter finishingHour\"\r\n          onChangeText={(type) => SetfinishingHour(type)}\r\n          onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Working_Hours\"\r\n          onChangeText={(working_hours) => Setworking_hours(working_hours)}\r\n          onEndEditing={(e) => handelRequiredWorking_hours(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Off_Days\"\r\n          onChangeText={(off_days) => Setoff_days(off_days)}\r\n          onEndEditing={(e) => handelRequiredOff_days(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={Next}>\r\n        <Text style={styles.buttontext1}>Next</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container1: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop: 120,\r\n    paddingBottom: 60,\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n  },\r\n  inputtext1: {\r\n    borderRadius: 9,\r\n    width: 250,\r\n    height: 40,\r\n    borderColor: \"#F05454\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n  errormsg: {\r\n    bottom: 5,\r\n    paddingRight: 199,\r\n    color: \"red\",\r\n  },\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 45,\r\n    backgroundColor: \"rgb(48, 71, 94)\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 20,\r\n    right: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}