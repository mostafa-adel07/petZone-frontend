{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styled from \"styled-components/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Setnewpassword = function Setnewpassword(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      Setpassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordConfirm = _useState4[0],\n      SetConfirm_password = _useState4[1];\n\n  var _React$useState = React.useState({\n    isValidPassword: \"\",\n    isConfirm_password: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var handleValidPassword = function handleValidPassword(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var handelValidConfirm_Password = function handelValidConfirm_Password(val) {\n    if (val !== password || val === \"\") {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isConfirm_password: false\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isConfirm_password: true\n      }));\n    }\n  };\n\n  var codeverfication = route.params.codeverfication;\n\n  function Next() {\n    var item, url;\n    return _regeneratorRuntime.async(function Next$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.isValidPassword === true && data.isConfirm_password === true)) {\n              _context.next = 5;\n              break;\n            }\n\n            item = {\n              password: password,\n              passwordConfirm: passwordConfirm\n            };\n            url = \"https://petzone99.herokuap
p.com/api/v1/users/resetPassword/\" + codeverfication;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.patch(url, item, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"My-Custom-Header\": \"foobar\",\n                Authorization: \"Bearer \" + codeverfication\n              }\n            }).then(function (response) {\n              navigation.navigate(\"Home\");\n            }).catch(function (error) {\n              if (error.response.status === 400) {\n                alert(\"Token is invalid or has expired ,please go send email again\");\n                navigation.navigate(\"Forgetpassword\");\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"SignUp\"\n      }), _jsxs(View, {\n        style: styles.input,\n        children: [_jsx(TextInput, {\n          style: styles.inputtext,\n          placeholder: \"Enter Password\",\n          onChangeText: function onChangeText(password) {\n            return Setpassword(password);\n          },\n          onEndEditing: function onEndEditing(e) {\n            return handleValidPassword(e.nativeEvent.text);\n          },\n          secureTextEntry: true,\n          placeholderTextColor: \"gray\"\n        }), _jsx(MaterialIcons, {\n          style: styles.icon1,\n          name: \"lock-outline\",\n          size: 24,\n          color: \"gray\"\n        })]\n      }), data.isValidPassword ? null : _jsx(View, {\n        style: styles.error,\n        children: _jsx(Text, {\n          style: styles.errormsg2,\n          children: \"password must be 8 characters long\"\n        })\n      }), _jsxs(View, {\n        style: styles.input,\n        children: [_jsx(TextInput, {\n          style: styles.inputtext,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(confirm_password) {\n            return SetConfirm_password(confirm_password);\n          },\n          onEndEditing: function onEndEditing(e) {\n            return handelValidConfirm_Password(e.nativeEvent.text);\n          },\n          secureTextEntry: true,\n          placeholderTextColor: \"gray\"\n        }), _jsx(MaterialIcons, {\n          style: styles.icon1,\n          name: \"lock-outline\",\n          size: 24,\n          color: \"gray\"\n        })]\n      }), data.isConfirm_password ? null : _jsx(View, {\n        style: styles.error,\n        children: _jsx(Text, {\n          style: styles.errormsg3,\n          children: \"password didnt match\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttoncontainer,\n        onPress: Next,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Update Password\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 400\n  },\n  input: {\n    flexDirection: \"row\"\n  },\n  title: {\n    color: \"black\",\n    fontSize: 30,\n    alignItems: \"center\",\n    marginTop: 90,\n    paddingBottom: 20\n  },\n  inputtext: {\n    borderRadius: 9,\n    width: 300,\n    height: 40,\n    borderColor: \"#ff00ff\",\n    borderWidth: 1,\n    paddingHorizontal: 35,\n    fontSize: 30,\n    color: \"black\",\n    marginVertical: 10\n  },\n  errormsg: {\n    bottom: 5,\n    paddingRight: 199,\n    color: \"red\"\n  },\n  errormsg1: {\n    bottom: 5,\n    paddingRight: 120,\n    color: \"red\"\n  },\n  errormsg2: {\n    bottom: 5,\n    paddingRight: 60,\n    color: \"red\"\n  },\n  errormsg3: {\n    bottom: 5,\n    paddingRight: 140,\n    color: \"red\"\n  },\n  icon1: {\n    position: \"absolute\",\n    top: 18,\n    left: 5\n  },\n  buttoncontainer: {\n    borderRadius: 15,\n    width: 200,\n    height: 40,\n    backgroundColor: \"rgb(255, 89, 89)\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    paddingLeft: 60\n  },\n  buttontext: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 15,\n    right: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/petZone/components/screens/setnewpassword.js"],"names":["React","useState","useContext","styled","Ionicons","MaterialIcons","MaterialCommunityIcons","Feather","axios","Setnewpassword","route","navigation","password","Setpassword","passwordConfirm","SetConfirm_password","isValidPassword","isConfirm_password","data","setData","handleValidPassword","val","trim","length","handelValidConfirm_Password","codeverfication","params","Next","item","url","patch","headers","Authorization","then","response","navigate","catch","error","status","alert","styles","container","title","input","inputtext","e","nativeEvent","text","icon1","errormsg2","confirm_password","errormsg3","buttoncontainer","buttontext","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingBottom","flexDirection","color","fontSize","marginTop","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","marginVertical","errormsg","bottom","paddingRight","errormsg1","position","top","left","paddingTop","paddingLeft","textAlign","right"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;;;;;;;AAWA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACvD,kBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA+CZ,QAAQ,CAAC,EAAD,CAAvD;AAAA;AAAA,MAAOa,eAAP;AAAA,MAAwBC,mBAAxB;;AAEA,wBAAwBf,KAAK,CAACC,QAAN,CAAe;AACrCe,IAAAA,eAAe,EAAE,EADoB;AAErCC,IAAAA,kBAAkB,EAAE;AAFiB,GAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAKA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnC,QAAIA,GAAG,CAACC,IAAJ,GAAWC,MAAX,IAAqB,CAAzB,EAA4B;AAC1BJ,MAAAA,OAAO,iCACFD,IADE;AAELF,QAAAA,eAAe,EAAE;AAFZ,SAAP;AAID,KALD,MAKO;AACLG,MAAAA,OAAO,iCACFD,IADE;AAELF,QAAAA,eAAe,EAAE;AAFZ,SAAP;AAID;AACF,GAZD;;AAcA,MAAMQ,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACH,GAAD,EAAS;AAC3C,QAAIA,GAAG,KAAKT,QAAR,IAAoBS,GAAG,KAAK,EAAhC,EAAoC;AAClCF,MAAAA,OAAO,iCACFD,IADE;AAELD,QAAAA,kBAAkB,EAAE;AAFf,SAAP;AAID,KALD,MAKO;AACLE,MAAAA,OAAO,iCACFD,IADE;AAELD,QAAAA,kBAAkB,EAAE;AAFf,SAAP;AAID;AACF,GAZD;;AAaA,MAAQQ,eAAR,GAA4Bf,KAAK,CAACgB,MAAlC,CAAQD,eAAR;;AACA,WAAeE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMT,IAAI,CAACF,eAAL,KAAyB,IAAzB,IAAiCE,IAAI,CAACD,kBAAL,KAA4B,IADnE;AAAA;AAAA;AAAA;;AAEQW,YAAAA,IAFR,GAEe;AAAEhB,cAAAA,QAAQ,EAARA,QAAF;AAAYE,cAAAA,eAAe,EAAfA;AAAZ,aAFf;AAGUe,YAAAA,GAHV,4DAGuEJ,eAHvE;AAAA;AAAA,6CAIUjB,KAAK,CACRsB,KADG,CACGD,GADH,EACQD,IADR,EACc;AAChBG,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,oCAAoB,QAFb;AAGPC,gBAAAA,aAAa,cAAYP;AAHlB;AADO,aADd,EAQHQ,IARG,CAQE,UAAUC,QAAV,EAAoB;AACxBvB,cAAAA,UAAU,CAACwB,QAAX,CAAoB,MAApB;AACD,aAVG,EAWHC,KAXG,CAWG,UAAUC,KAAV,EAAiB;AACtB,kBAAIA,KAAK,CAACH,QAAN,CAAeI,MAAf,KAA0B,GAA9B,EAAmC;AACjCC,gBAAAA,KAAK,CACH,6DADG,CAAL;AAGA5B,gBAAAA,UAAU,CAACwB,QAAX,CAAoB,gBAApB;AACD;AACF,aAlBG,CAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBA,SACE,KAAC,UAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,QADF,EAGE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,SADhB;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,YAAY,EAAE,sBAAChC,QAAD;AAAA,mBAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,WAHhB;AAIE,UAAA,YAAY,EAAE,sBAACiC,CAAD;AAAA,mBAAOzB,mBAAmB,CAACyB,CAAC,CAACC,WAAF,CAAcC,IAAf,CAA1B;AAAA,WAJhB;AAKE,UAAA,eAAe,EAAE,IALnB;AAME,UAAA,oBAAoB,EAAC;AANvB,UADF,EASE,KAAC,aAAD;AACE,UAAA,KAAK,EAAEP,MAAM,CAACQ,KADhB;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,KAAK,EAAC;AAJR,UATF;AAAA,QAHF,EAmBG9B,IAAI,CAACF,eAAL,GAAuB,IAAvB,GACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEwB,MAAM,CAACH,KAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACS,SAApB;AAAA;AAAA;AADF,QApBJ,EA0BE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACG,KAApB;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,SADhB;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,YAAY,EAAE,sBAACM,gBAAD;AAAA,mBACZnC,mBAAmB,CAACmC,gBAAD,CADP;AAAA,WAHhB;AAME,UAAA,YAAY,EAAE,sBAACL,CAAD;AAAA,mBACZrB,2BAA2B,CAACqB,CAAC,CAACC,WAAF,CAAcC,IAAf,CADf;AAAA,WANhB;AASE,UAAA,eAAe,EAAE,IATnB;AAUE,UAAA,oBAAoB,EAAC;AAVvB,UADF,EAaE,KAAC,aAAD;AACE,UAAA,KAAK,EAAEP,MAAM,CAACQ,KADhB;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,KAAK,EAAC;AAJR,UAbF;AAAA,QA1BF,EA8CG9B,IAAI,CAACD,kBAAL,GAA0B,IAA1B,GACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEuB,MAAM,CAACH,KAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACW,SAApB;AAAA;AAAA;AADF,QA/CJ,EAmDE,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEX,MAAM,CAACY,eAAhC;AAAiD,QAAA,OAAO,EAAEzB,IAA1D;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEa,MAAM,CAACa,UAApB;AAAA;AAAA;AADF,QAnDF;AAAA;AADF,IADF;AA2DD,CAzHM;AA0HP,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,aAAa,EAAE;AALN,GADoB;AAQ/BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,aAAa,EAAE;AADV,GARwB;AAW/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLJ,IAAAA,UAAU,EAAE,QAHP;AAILK,IAAAA,SAAS,EAAE,EAJN;AAKLJ,IAAAA,aAAa,EAAE;AALV,GAXwB;AAkB/BhB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,YAAY,EAAE,CADL;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,iBAAiB,EAAE,EANV;AAOTP,IAAAA,QAAQ,EAAE,EAPD;AAQTD,IAAAA,KAAK,EAAE,OARE;AASTS,IAAAA,cAAc,EAAE;AATP,GAlBoB;AA6B/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CADA;AAERC,IAAAA,YAAY,EAAE,GAFN;AAGRZ,IAAAA,KAAK,EAAE;AAHC,GA7BqB;AAkC/Ba,EAAAA,SAAS,EAAE;AACTF,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,YAAY,EAAE,GAFL;AAGTZ,IAAAA,KAAK,EAAE;AAHE,GAlCoB;AAuC/Bb,EAAAA,SAAS,EAAE;AACTwB,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,YAAY,EAAE,EAFL;AAGTZ,IAAAA,KAAK,EAAE;AAHE,GAvCoB;AA4C/BX,EAAAA,SAAS,EAAE;AACTsB,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,YAAY,EAAE,GAFL;AAGTZ,IAAAA,KAAK,EAAE;AAHE,GA5CoB;AAiD/Bd,EAAAA,KAAK,EAAE;AACL4B,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,GAAG,EAAE,EAFA;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAjDwB;AAsD/B1B,EAAAA,eAAe,EAAE;AACfa,IAAAA,YAAY,EAAE,EADC;AAEfC,IAAAA,KAAK,EAAE,GAFQ;AAGfC,IAAAA,MAAM,EAAE,EAHO;AAIfX,IAAAA,eAAe,EAAE,kBAJF;AAKfuB,IAAAA,UAAU,EAAE,CALG;AAMfrB,IAAAA,cAAc,EAAE,QAND;AAOfM,IAAAA,SAAS,EAAE,EAPI;AAQfgB,IAAAA,WAAW,EAAE;AARE,GAtDc;AAgE/B3B,EAAAA,UAAU,EAAE;AACV4B,IAAAA,SAAS,EAAE,QADD;AAEVnB,IAAAA,KAAK,EAAE,OAFG;AAGVC,IAAAA,QAAQ,EAAE,EAHA;AAIVmB,IAAAA,KAAK,EAAE;AAJG;AAhEmB,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { TextInput, Platform } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport axios from \"axios\";\r\n\r\nexport const Setnewpassword = ({ route, navigation }) => {\r\n  const [password, Setpassword] = useState(\"\");\r\n  const [passwordConfirm, SetConfirm_password] = useState(\"\");\r\n\r\n  const [data, setData] = React.useState({\r\n    isValidPassword: \"\",\r\n    isConfirm_password: \"\",\r\n  });\r\n\r\n  const handleValidPassword = (val) => {\r\n    if (val.trim().length >= 8) {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handelValidConfirm_Password = (val) => {\r\n    if (val !== password || val === \"\") {\r\n      setData({\r\n        ...data,\r\n        isConfirm_password: false,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isConfirm_password: true,\r\n      });\r\n    }\r\n  };\r\n  const { codeverfication } = route.params;\r\n  async function Next() {\r\n    if (data.isValidPassword === true && data.isConfirm_password === true) {\r\n      let item = { password, passwordConfirm };\r\n      const url = `https://petzone99.herokuap
p.com/api/v1/users/resetPassword/${codeverfication}`;\r\n      await axios\r\n        .patch(url, item, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"My-Custom-Header\": \"foobar\",\r\n            Authorization: `Bearer ${codeverfication}`,\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          navigation.navigate(\"Home\");\r\n        })\r\n        .catch(function (error) {\r\n          if (error.response.status === 400) {\r\n            alert(\r\n              \"Token is invalid or has expired ,please go send email again\"\r\n            );\r\n            navigation.navigate(\"Forgetpassword\");\r\n          }\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>SignUp</Text>\r\n\r\n        <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Enter Password\"\r\n            onChangeText={(password) => Setpassword(password)}\r\n            onEndEditing={(e) => handleValidPassword(e.nativeEvent.text)}\r\n            secureTextEntry={true}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n          <MaterialIcons\r\n            style={styles.icon1}\r\n            name=\"lock-outline\"\r\n            size={24}\r\n            color=\"gray\"\r\n          />\r\n        </View>\r\n        {data.isValidPassword ? null : (\r\n          <View style={styles.error}>\r\n            <Text style={styles.errormsg2}>\r\n              password must be 8 characters long\r\n            </Text>\r\n          </View>\r\n        )}\r\n        <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Confirm Password\"\r\n            onChangeText={(confirm_password) =>\r\n              SetConfirm_password(confirm_password)\r\n            }\r\n            onEndEditing={(e) =>\r\n              handelValidConfirm_Password(e.nativeEvent.text)\r\n            }\r\n            secureTextEntry={true}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n          <MaterialIcons\r\n            style={styles.icon1}\r\n            name=\"lock-outline\"\r\n            size={24}\r\n            color=\"gray\"\r\n          />\r\n        </View>\r\n        {data.isConfirm_password ? null : (\r\n          <View style={styles.error}>\r\n            <Text style={styles.errormsg3}>password didnt match</Text>\r\n          </View>\r\n        )}\r\n        <TouchableOpacity style={styles.buttoncontainer} onPress={Next}>\r\n          <Text style={styles.buttontext}>Update Password</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 400,\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: 30,\r\n    alignItems: \"center\",\r\n    marginTop: 90,\r\n    paddingBottom: 20,\r\n  },\r\n  inputtext: {\r\n    borderRadius: 9,\r\n    width: 300,\r\n    height: 40,\r\n    borderColor: \"#ff00ff\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 35,\r\n    fontSize: 30,\r\n    color: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n  errormsg: {\r\n    bottom: 5,\r\n    paddingRight: 199,\r\n    color: \"red\",\r\n  },\r\n  errormsg1: {\r\n    bottom: 5,\r\n    paddingRight: 120,\r\n    color: \"red\",\r\n  },\r\n  errormsg2: {\r\n    bottom: 5,\r\n    paddingRight: 60,\r\n    color: \"red\",\r\n  },\r\n  errormsg3: {\r\n    bottom: 5,\r\n    paddingRight: 140,\r\n    color: \"red\",\r\n  },\r\n  icon1: {\r\n    position: \"absolute\",\r\n    top: 18,\r\n    left: 5,\r\n  },\r\n  buttoncontainer: {\r\n    borderRadius: 15,\r\n    width: 200,\r\n    height: 40,\r\n    backgroundColor: \"rgb(255, 89, 89)\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    right: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}