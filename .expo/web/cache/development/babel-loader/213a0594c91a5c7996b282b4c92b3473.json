{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SP1 = function SP1(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      Settype = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ratePerHour = _useState4[0],\n      SetratePerHour = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      workingHours = _useState6[0],\n      Setworking_hours = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      offDays = _useState8[0],\n      Setoff_days = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      finishingHour = _useState10[0],\n      SetfinishingHour = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      landLine = _useState12[0],\n      Setland_line = _useState12[1];\n\n  var _React$useState = React.useState({\n    isRequiredType: true,\n    isRequiredRate: true,\n    isRequiredWorking_hours: true,\n    isRequiredOff_days: true,\n    isRequiredLand_line: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data2 = _React$useState2[0],\n      setData2 = _React$useState2[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      userName = _route$params.userName,\n      phoneNumber = _route$params.phoneNumber,\n      email = _route$params.email,\n      password = _route$params.password,\n      passwordConfirm = _route$params.passwordConfirm,\n      nationalID = _route$params.nationalID,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city,\n      role = _route$params.role,\n      image = _route$params.image;\n\n  var handelRequiredType = function handelRequiredType(val) {\n    if (val === '') {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredType: false\n      }));\n    } else {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredType: true\n      }));\n    }\n  };\n\n  var handelRequiredRate = function handelRequiredRate(val) {\n    if (val === '') {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredRate: false\n      }));\n    } else {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredRate: true\n      }));\n    }\n  };\n\n  var handelRequiredWorking_hours = function handelRequiredWorking_hours(val) {\n    if (val === '') {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredWorking_hours: false\n      }));\n    } else {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredWorking_hours: true\n      }));\n    }\n  };\n\n  var handelRequiredOff_days = function handelRequiredOff_days(val) {\n    if (val === '') {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredOff_days: false\n      }));\n    } else {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredOff_days: true\n      }));\n    }\n  };\n\n  var handelRequiredLand_line = function handelRequiredLand_line(val) {\n    if (val === '') {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredLand_line: false\n      }));\n    } else {\n      setData2(_objectSpread(_objectSpread({}, data2), {}, {\n        isRequiredLand_line: true\n      }));\n    }\n  };\n\n  function Next() {\n    navigation.navigate(\"SP2\", {\n      name: name,\n      username: userName,\n      phoneNumber: phoneNumber,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      nationalID: nationalID,\n      country: country,\n      city: city,\n      address: address,\n      role: role,\n      type: type,\n      workingHours: workingHours,\n      finishingHour: finishingHour,\n      offDays: offDays,\n      ratePerHour: ratePerHour,\n      landLine: landLine\n    });\n  }\n\n  return _jsx(SafeAreaView, {\n    style: styles.con1,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.Container,\n      children: [_jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter Type\",\n          onChangeText: function onChangeText(type) {\n            return Settype(type);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter ratePerHour\",\n          onChangeText: function onChangeText(type) {\n            return SetratePerHour(type);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter finishingHour\",\n          onChangeText: function onChangeText(type) {\n            return SetfinishingHour(type);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter Working_Hours\",\n          onChangeText: function onChangeText(working_hours) {\n            return Setworking_hours(working_hours);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter Off_Days\",\n          onChangeText: function onChangeText(off_days) {\n            return Setoff_days(off_days);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Enter landLine\",\n          onChangeText: function onChangeText(landLine) {\n            return Setland_line(landLine);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttoncontainer1,\n        onPress: Next,\n        children: _jsx(Text, {\n          style: styles.buttontext1,\n          children: \"Next\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  con: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  Container: {\n    backgroundColor: \"rgb(250, 219, 216)\",\n    alignItems: \"center\",\n    paddingTop: 120,\n    paddingBottom: 150\n  },\n  input: {\n    flexDirection: \"row\"\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 350,\n    height: 50,\n    borderColor: \"white\",\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    backgroundColor: \"white\",\n    marginVertical: 15,\n    marginRight: -10\n  },\n  errormsg: {\n    bottom: 5,\n    paddingRight: 240,\n    color: \"red\"\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 350,\n    height: 50,\n    backgroundColor: \"#EA5C2B\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    paddingLeft: 50,\n    marginLeft: 10\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 20,\n    right: 30,\n    fontWeight: 'bold'\n  },\n  logo: {\n    height: 128,\n    width: 128\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/PetZone1/petZone/components/screens/serviceProvider/SP1.js"],"names":["React","useState","SP1","route","navigation","type","Settype","ratePerHour","SetratePerHour","workingHours","Setworking_hours","offDays","Setoff_days","finishingHour","SetfinishingHour","landLine","Setland_line","isRequiredType","isRequiredRate","isRequiredWorking_hours","isRequiredOff_days","isRequiredLand_line","data2","setData2","params","name","userName","phoneNumber","email","password","passwordConfirm","nationalID","address","country","city","role","image","handelRequiredType","val","handelRequiredRate","handelRequiredWorking_hours","handelRequiredOff_days","handelRequiredLand_line","Next","navigate","username","styles","con1","Container","input","inputtext1","working_hours","off_days","buttoncontainer1","buttontext1","StyleSheet","create","con","flex","paddingTop","StatusBar","currentHeight","backgroundColor","alignItems","paddingBottom","flexDirection","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","fontSize","marginVertical","marginRight","errormsg","bottom","paddingRight","color","justifyContent","marginTop","paddingLeft","marginLeft","textAlign","right","fontWeight","logo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport { TextInput, ScrollView } from \"react-native\";\r\n\r\nexport const SP1 = ({ route, navigation }) => {\r\n  const [type, Settype] = useState(\"\");\r\n  const [ratePerHour, SetratePerHour] = useState(\"\");\r\n  const [workingHours, Setworking_hours] = useState(\"\");\r\n  const [offDays, Setoff_days] = useState(\"\");\r\n  const [finishingHour, SetfinishingHour] = useState(\"\");\r\n  const [landLine, Setland_line] = useState(\"\");\r\n\r\n  const [data2, setData2] = React.useState({\r\n    isRequiredType: true,\r\n    isRequiredRate: true,\r\n    isRequiredWorking_hours: true,\r\n    isRequiredOff_days: true,\r\n    isRequiredLand_line: true,\r\n  });\r\n  const {\r\n    name,\r\n    userName,\r\n    phoneNumber,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    nationalID,\r\n    address,\r\n    country,\r\n    city,\r\n    role,\r\n    image,\r\n  } = route.params;\r\n  const handelRequiredType = (val) => {\r\n    if (val === '') {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredType: false,\r\n      });\r\n    } else {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredType: true,\r\n      });\r\n    }\r\n  };\r\n   const handelRequiredRate = (val) => {\r\n    if (val === '') {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredRate: false,\r\n      });\r\n    } else {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredRate: true,\r\n      });\r\n    }\r\n  };\r\n  const handelRequiredWorking_hours = (val) => {\r\n    if (val === '') {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredWorking_hours: false,\r\n      });\r\n    } else {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredWorking_hours: true,\r\n      });\r\n    }\r\n  };\r\n  const handelRequiredOff_days = (val) => {\r\n    if (val === '') {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredOff_days: false,\r\n      });\r\n    } else {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredOff_days: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handelRequiredLand_line = (val) => {\r\n    if (val === '') {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredLand_line: false,\r\n      });\r\n    } else {\r\n      setData2({\r\n        ...data2,\r\n        isRequiredLand_line: true,\r\n      });\r\n    }\r\n  };\r\n  function Next() {\r\n    navigation.navigate(\"SP2\", {\r\n      name: name,\r\n      username: userName,\r\n      phoneNumber: phoneNumber,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      nationalID: nationalID,\r\n      country: country,\r\n      city: city,\r\n      address: address,\r\n      role: role,\r\n      type: type,\r\n      workingHours: workingHours,\r\n      finishingHour: finishingHour,\r\n      offDays: offDays,\r\n      ratePerHour: ratePerHour,\r\n      landLine: landLine,\r\n    });\r\n  }\r\n  return (\r\n    <SafeAreaView style={styles.con1}>\r\n <ScrollView contentContainerStyle={styles.Container}>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Type\"\r\n          onChangeText={(type) => Settype(type)}\r\n          //onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter ratePerHour\"\r\n          onChangeText={(type) => SetratePerHour(type)}\r\n          //onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n     \r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter finishingHour\"\r\n          onChangeText={(type) => SetfinishingHour(type)}\r\n          //onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Working_Hours\"\r\n          onChangeText={(working_hours) => Setworking_hours(working_hours)}\r\n         // onEndEditing={(e) => handelRequiredWorking_hours(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Off_Days\"\r\n          onChangeText={(off_days) => Setoff_days(off_days)}\r\n         // onEndEditing={(e) => handelRequiredOff_days(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter landLine\"\r\n          onChangeText={(landLine) => Setland_line(landLine)}\r\n         // onEndEditing={(e) => handelRequiredType(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={Next}>\r\n        <Text style={styles.buttontext1}>Next</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n    </SafeAreaView>\r\n    \r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  con: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  Container: {\r\n    backgroundColor: \"rgb(250, 219, 216)\",\r\n  \r\n    alignItems:\"center\",\r\n    paddingTop: 120,\r\n    paddingBottom: 150,\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n  },\r\n  inputtext1: {\r\n    borderRadius: 9,\r\n    width: 350,\r\n    height: 50,\r\n    borderColor: \"white\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    fontSize: 15,\r\n    backgroundColor: \"white\",\r\n    marginVertical: 15,\r\n    marginRight:-10,\r\n  },\r\n  errormsg: {\r\n    bottom: 5,\r\n    paddingRight: 240,\r\n    color: \"red\",\r\n  },\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 350,\r\n    height: 50,\r\n    backgroundColor: \"#EA5C2B\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    paddingLeft: 50,\r\n    marginLeft:10\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    right: 30,\r\n    fontWeight:'bold'\r\n  },\r\n  logo: {\r\n    height: 128,\r\n    width: 128,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}