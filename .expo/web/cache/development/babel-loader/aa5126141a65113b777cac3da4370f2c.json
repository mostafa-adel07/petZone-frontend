{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styled from \"styled-components/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    isValidEmail: true,\n    isValidPassword: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var handleValidus = function handleValidus(val) {\n    var reg = /@./;\n\n    if (val.trim().length >= 4 && reg.test(val) !== false) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidEmail: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidEmail: false\n      }));\n    }\n  };\n\n  var handleValidus1 = function handleValidus1(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailError = _useState2[0],\n      SetEamilError = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordError = _useState4[0],\n      SetpasswordError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      SetEamil = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      Setpassword = _useState8[1];\n\n  function Login1() {\n    var item;\n    return _regeneratorRuntime.async(function Login1$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.isValidEmail && data.isValidPassword)) {\n              _context.next = 4;\n              break;\n            }\n\n            item = {\n              password: password,\n              email: email\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"https://petzone99.herokuap
p.com/api/v1/users/login\", item, {\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"My-Custom-Header\": \"foobar\",\n                Authorization: \"Bearer my-token\"\n              }\n            }).then(function (response) {\n              navigation.navigate(\"Home\");\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Emilvalidator() {\n    (function (emailError) {\n      return SetEamilError(\"emil feild can not be empty\");\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../../assets/kindpng_1209732.png\")\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext,\n        placeholder: \"Enter your Email\",\n        placeholderTextColor: \"gray\",\n        value: email,\n        onEndEditing: function onEndEditing(e) {\n          return handleValidus(e.nativeEvent.text);\n        },\n        onBlur: Emilvalidator,\n        onChangeText: function onChangeText(email) {\n          return SetEamil(email);\n        }\n      }), _jsx(MaterialCommunityIcons, {\n        style: styles.icon1,\n        name: \"email-outline\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data.isValidEmail ? null : _jsx(Text, {\n      style: {\n        color: \"red\"\n      },\n      children: \" email must have '@' and '.'\"\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext,\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"gray\",\n        value: password,\n        onEndEditing: function onEndEditing(e) {\n          return handleValidus1(e.nativeEvent.text);\n        },\n        onChangeText: function onChangeText(password) {\n          return Setpassword(password);\n        }\n      }), _jsx(MaterialIcons, {\n        style: styles.icon1,\n        name: \"lock-outline\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data.isValidPassword ? null : _jsxs(Text, {\n      style: {\n        color: \"red\"\n      },\n      children: [\" \", \"username must be 8 charactors long.\"]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer,\n      onPress: Login1,\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.signuptextCont,\n      children: [_jsx(Text, {\n        style: styles.signupText,\n        children: \" Don't have an account yet ? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"SignupUser\");\n        },\n        children: _jsx(Text, {\n          style: styles.buttontext1,\n          children: \" Signup\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb(245, 245, 245)\"\n  },\n  input: {\n    flexDirection: \"row\",\n    width: 300\n  },\n  signupText: {\n    paddingRight: 10,\n    fontSize: 15,\n    marginRight: 10\n  },\n  title: {\n    color: \"black\",\n    fontSize: 20,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  inputtext: {\n    borderRadius: 9,\n    width: 300,\n    height: 40,\n    borderColor: \"rgb(48, 71, 94)\",\n    borderWidth: 1,\n    paddingHorizontal: 35,\n    fontSize: 15,\n    color: \"black\",\n    marginVertical: 10\n  },\n  icon1: {\n    position: \"absolute\",\n    top: 18,\n    left: 5\n  },\n  signuptextCont: {\n    flex: 0,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    paddingVertical: 1,\n    flexDirection: \"row\",\n    marginTop: 30\n  },\n  buttoncontainer: {\n    borderRadius: 15,\n    width: 150,\n    height: 40,\n    backgroundColor: \"rgb(240, 84, 84)\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 15,\n    paddingLeft: 60\n  },\n  buttontext: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 15,\n    right: 30\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"rgb(221, 74, 72)\",\n    fontSize: 15,\n    right: 25\n  },\n  logo: {\n    height: 128,\n    width: 128,\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/login.js"],"names":["React","useState","styled","Ionicons","MaterialIcons","MaterialCommunityIcons","Feather","axios","Login","navigation","isValidEmail","isValidPassword","data","setData","handleValidus","val","reg","trim","length","test","handleValidus1","emailError","SetEamilError","passwordError","SetpasswordError","email","SetEamil","password","Setpassword","Login1","item","post","headers","Authorization","then","response","navigate","catch","error","console","log","Emilvalidator","styles","container","logo","require","input","inputtext","e","nativeEvent","text","icon1","color","buttoncontainer","buttontext","signuptextCont","signupText","buttontext1","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","width","paddingRight","fontSize","marginRight","title","marginBottom","borderRadius","height","borderColor","borderWidth","paddingHorizontal","marginVertical","position","top","left","paddingVertical","marginTop","paddingTop","paddingLeft","textAlign","right"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport axios from \"axios\";\r\n\r\nexport const Login = ({ navigation }) => {\r\n  const [data, setData] = React.useState({\r\n    isValidEmail: true,\r\n    isValidPassword: true,\r\n  });\r\n  const handleValidus = (val) => {\r\n    let reg = /@./;\r\n    if (val.trim().length >= 4 && reg.test(val) !== false) {\r\n      setData({\r\n        ...data,\r\n        isValidEmail: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidEmail: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleValidus1 = (val) => {\r\n    if (val.trim().length >= 8) {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [emailError, SetEamilError] = useState(true);\r\n  //const passwordError=useState('');\r\n  const [passwordError, SetpasswordError] = useState();\r\n\r\n  const [email, SetEamil] = useState(\"\");\r\n  const [password, Setpassword] = useState(\"\");\r\n  async function Login1() {\r\n    if (data.isValidEmail && data.isValidPassword) {\r\n      let item = { password, email };\r\n\r\n      await axios\r\n        .post(\"https://petzone99.herokuap
p.com/api/v1/users/login\", item, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"My-Custom-Header\": \"foobar\",\r\n            Authorization: \"Bearer my-token\",\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          navigation.navigate(\"Home\");\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n    }\r\n  }\r\n  function Emilvalidator() {\r\n    /*if(email==\"\")\r\n{*/\r\n    (emailError) => SetEamilError(\"emil feild can not be empty\");\r\n    //}\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* {<Text style={styles.title}>Login</Text>} */}\r\n\r\n      <Image\r\n        style={styles.logo}\r\n        source={require(\"../../assets/kindpng_1209732.png\")}\r\n      />\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Enter your Email\"\r\n          placeholderTextColor=\"gray\"\r\n          value={email}\r\n          onEndEditing={(e) => handleValidus(e.nativeEvent.text)}\r\n          onBlur={Emilvalidator}\r\n          onChangeText={(email) => SetEamil(email)}\r\n        />\r\n        <MaterialCommunityIcons\r\n          style={styles.icon1}\r\n          name=\"email-outline\"\r\n          size={24}\r\n          color=\"gray\"\r\n        />\r\n      </View>\r\n      {data.isValidEmail ? null : (\r\n        <Text style={{ color: \"red\" }}> email must have '@' and '.'</Text>\r\n      )}\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Enter Password\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor=\"gray\"\r\n          value={password}\r\n          onEndEditing={(e) => handleValidus1(e.nativeEvent.text)}\r\n          onChangeText={(password) => Setpassword(password)}\r\n        />\r\n        <MaterialIcons\r\n          style={styles.icon1}\r\n          name=\"lock-outline\"\r\n          size={24}\r\n          color=\"gray\"\r\n        />\r\n      </View>\r\n      {data.isValidPassword ? null : (\r\n        <Text style={{ color: \"red\" }}>\r\n          {\" \"}\r\n          username must be 8 charactors long.\r\n        </Text>\r\n      )}\r\n      <TouchableOpacity\r\n        style={styles.buttoncontainer}\r\n        onPress={Login1}\r\n        // onPress={() => navigation.navigate('TypeSignup')}\r\n        /**/\r\n      >\r\n        <Text style={styles.buttontext}>Login</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.signuptextCont}>\r\n        <Text style={styles.signupText}> Don't have an account yet ? </Text>\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"SignupUser\")}>\r\n          <Text style={styles.buttontext1}> Signup</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb(245, 245, 245)\",\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n    width: 300,\r\n  },\r\n  signupText: {\r\n    paddingRight: 10,\r\n    fontSize: 15,\r\n    marginRight: 10,\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: 20,\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n\r\n  inputtext: {\r\n    borderRadius: 9,\r\n    width: 300,\r\n    height: 40,\r\n    borderColor: \"rgb(48, 71, 94)\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 35,\r\n    fontSize: 15,\r\n    color: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n  icon1: {\r\n    position: \"absolute\",\r\n    top: 18,\r\n    left: 5,\r\n  },\r\n  signuptextCont: {\r\n    flex: 0,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingVertical: 1,\r\n    flexDirection: \"row\",\r\n    marginTop: 30,\r\n  },\r\n  buttoncontainer: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 40,\r\n    backgroundColor: \"rgb(240, 84, 84)\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    right: 30,\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"rgb(221, 74, 72)\",\r\n    fontSize: 15,\r\n    right: 25,\r\n  },\r\n  logo: {\r\n    height: 128,\r\n    width: 128,\r\n    marginBottom: 30,\r\n\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}