{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PetOwner = function PetOwner(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      username = _route$params.username,\n      phoneNumber = _route$params.phoneNumber,\n      email = _route$params.email,\n      password = _route$params.password,\n      passwordConfirm = _route$params.passwordConfirm,\n      nationalID = _route$params.nationalID,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city;\n\n  var addImage = function addImage() {\n    var _image;\n\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            _image = _context.sent;\n\n            if (!_image.cancelled) {\n              setImage(_image.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function Next() {\n    navigation.navigate(\"typeSignup\", {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      userName: username,\n      nationalID: nationalID,\n      city: city,\n      country: country,\n      address: address,\n      phoneNumber: phoneNumber,\n      profilePicture: image\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container2,\n    children: [_jsx(Text, {\n      style: styles.input,\n      children: \" Adding Profile Picture\"\n    }), _jsxs(View, {\n      style: imageUploaderStyles.container,\n      children: [image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(View, {\n        style: imageUploaderStyles.uploadBtnContainer,\n        children: _jsxs(TouchableOpacity, {\n          onPress: addImage,\n          style: imageUploaderStyles.uploadBtn,\n          children: [_jsxs(Text, {\n            children: [image ? \"Edit\" : \"Upload\", \" Image\"]\n          }), _jsx(AntDesign, {\n            name: \"camera\",\n            size: 20,\n            color: \"black\"\n          })]\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: Next,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Next\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container2: {\n    flex: 1,\n    backgroundColor: \"rgb(245, 245, 245)\",\n    marginBottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    color: \"black\",\n    top: 1,\n    textAlign: \"center\",\n    fontSize: 20,\n    marginTop: 90\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: \"#ff00ff\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 60,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    borderColor: \"rgb(48, 71, 94)\",\n    fontSize: 20,\n    right: 30\n  },\n  signuptext: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 18,\n    flexDirection: \"row\",\n    marginTop: 20\n  }\n});\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    top: 30,\n    backgroundColor: \"#efefef\",\n    position: \"relative\",\n    borderRadius: 999,\n    overflow: \"hidden\"\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"lightgray\",\n    width: \"100%\",\n    height: \"25%\"\n  },\n  uploadBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/SignupUser2.js"],"names":["React","useState","useEffect","AntDesign","ImagePicker","PetOwner","route","navigation","image","setImage","params","name","username","phoneNumber","email","password","passwordConfirm","nationalID","address","country","city","addImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_image","cancelled","uri","Next","navigate","userName","profilePicture","styles","container2","input","imageUploaderStyles","container","width","height","uploadBtnContainer","uploadBtn","buttoncontainer1","buttontext1","StyleSheet","create","flex","backgroundColor","marginBottom","alignItems","color","top","textAlign","fontSize","marginTop","borderRadius","paddingTop","justifyContent","paddingLeft","borderColor","right","signuptext","flexDirection","elevation","position","overflow","opacity","bottom","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Image,\r\n  View,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport const PetOwner = ({ route, navigation }) => {\r\n  const [image, setImage] = useState(null);\r\n  const {\r\n    name,\r\n    username,\r\n    phoneNumber,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    nationalID,\r\n    address,\r\n    country,\r\n    city,\r\n  } = route.params;\r\n  const addImage = async () => {\r\n    let _image = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!_image.cancelled) {\r\n      setImage(_image.uri);\r\n    }\r\n  };\r\n  function Next() {\r\n    navigation.navigate(\"typeSignup\", {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      userName: username,\r\n      nationalID: nationalID,\r\n      city: city,\r\n      country: country,\r\n      address: address,\r\n      phoneNumber: phoneNumber,\r\n      profilePicture:image,\r\n    });\r\n  }\r\n  return (\r\n    <View style={styles.container2}>\r\n      <Text style={styles.input}> Adding Profile Picture</Text>\r\n      <View style={imageUploaderStyles.container}>\r\n        {image && (\r\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n        )}\r\n        <View style={imageUploaderStyles.uploadBtnContainer}>\r\n          <TouchableOpacity\r\n            onPress={addImage}\r\n            style={imageUploaderStyles.uploadBtn}\r\n          >\r\n            <Text>{image ? \"Edit\" : \"Upload\"} Image</Text>\r\n            <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={Next}>\r\n        <Text style={styles.buttontext1}>Next</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container2: {\r\n      flex: 1,\r\n      backgroundColor: \"rgb(245, 245, 245)\",\r\n      marginBottom: 0,\r\n      alignItems: \"center\",\r\n      backgroundColor: \"white\",\r\n    },\r\n    input: {\r\n      color: \"black\",\r\n      top: 1,\r\n      textAlign: \"center\",\r\n      fontSize: 20,\r\n      marginTop: 90,\r\n    },\r\n  \r\n    buttoncontainer1: {\r\n      borderRadius: 15,\r\n      width: 150,\r\n      height: 45,\r\n      backgroundColor: \"#ff00ff\",\r\n      paddingTop: 1,\r\n      justifyContent: \"center\",\r\n      marginTop: 60,\r\n      paddingLeft: 60,\r\n    },\r\n    buttontext1: {\r\n      textAlign: \"center\",\r\n      borderColor: \"rgb(48, 71, 94)\",\r\n      fontSize: 20,\r\n      right: 30,\r\n    },\r\n    signuptext: {\r\n      textAlign: \"center\",\r\n      color: \"black\",\r\n      fontSize: 18,\r\n      flexDirection: \"row\",\r\n      marginTop: 20,\r\n    },\r\n  });\r\n  const imageUploaderStyles = StyleSheet.create({\r\n    container: {\r\n      elevation: 2,\r\n      height: 200,\r\n      width: 200,\r\n      top: 30,\r\n      backgroundColor: \"#efefef\",\r\n      position: \"relative\",\r\n      borderRadius: 999,\r\n      overflow: \"hidden\",\r\n    },\r\n    uploadBtnContainer: {\r\n      opacity: 0.7,\r\n      position: \"absolute\",\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: \"lightgray\",\r\n      width: \"100%\",\r\n      height: \"25%\",\r\n    },\r\n    uploadBtn: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  });\r\n  \r\n"]},"metadata":{},"sourceType":"module"}