{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AntDesign } from '@expo/vector-icons';\nimport styled from 'styled-components/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { SignupUser } from \"./SignupUser\";\nimport { SignupUser1 } from \"./SignupUser1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SignupUser2 = function SignupUser2(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _route$params = route.params,\n      username = _route$params.username,\n      phone = _route$params.phone,\n      email = _route$params.email,\n      password = _route$params.password,\n      confirm_password = _route$params.confirm_password,\n      nid = _route$params.nid,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city,\n      isValidUser = _route$params.isValidUser,\n      isValidServiceProvider = _route$params.isValidServiceProvider;\n\n  var addImage = function addImage() {\n    var _image;\n\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            _image = _context.sent;\n\n            if (!_image.cancelled) {\n              setImage(_image.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function signup() {\n    var user = {\n      username: username,\n      email: email,\n      phone: phone,\n      password: password,\n      nid: nid,\n      country: country,\n      city: city,\n      address: address,\n      isValidUser: isValidUser,\n      isValidServiceProvider: isValidServiceProvider,\n      image: image\n    };\n    console.warn(user);\n    var url = 'http://127.0.0.1:3000/api/v1/users/signup';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application.json'\n      },\n      body: JSON.stringify(user)\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      return console.error('Error:', error);\n    }).then(function (response) {\n      return console.log('Success:', response);\n    });\n    navigation.navigate('Home');\n  }\n\n  return _jsxs(View, {\n    style: styles.container2,\n    children: [_jsx(Text, {\n      style: styles.input,\n      children: \" Adding Profile Picture\"\n    }), _jsxs(View, {\n      style: imageUploaderStyles.container,\n      children: [image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(View, {\n        style: imageUploaderStyles.uploadBtnContainer,\n        children: _jsxs(TouchableOpacity, {\n          onPress: addImage,\n          style: imageUploaderStyles.uploadBtn,\n          children: [_jsxs(Text, {\n            children: [image ? 'Edit' : 'Upload', \" Image\"]\n          }), _jsx(AntDesign, {\n            name: \"camera\",\n            size: 20,\n            color: \"black\"\n          })]\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: signup,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"SignUp\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container2: {\n    flex: 1,\n    color: 'black',\n    marginBottom: 0,\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  input: {\n    color: 'black',\n    top: 1,\n    textAlign: 'center',\n    fontSize: 30,\n    marginTop: 90\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: '#ff00ff',\n    paddingTop: 1,\n    justifyContent: 'center',\n    marginTop: 60,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: 'center',\n    color: 'black',\n    fontSize: 20,\n    right: 30\n  },\n  signuptext: {\n    textAlign: 'center',\n    color: 'black',\n    fontSize: 18,\n    flexDirection: 'row',\n    marginTop: 20\n  }\n});\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    top: 30,\n    backgroundColor: '#efefef',\n    position: 'relative',\n    borderRadius: 999,\n    overflow: 'hidden'\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'lightgray',\n    width: '100%',\n    height: '25%'\n  },\n  uploadBtn: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/SignupUser2.js"],"names":["React","useState","useEffect","AntDesign","styled","ImagePicker","SignupUser","SignupUser1","SignupUser2","route","navigation","image","setImage","params","username","phone","email","password","confirm_password","nid","address","country","city","isValidUser","isValidServiceProvider","addImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_image","cancelled","uri","signup","user","console","warn","url","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","log","navigate","styles","container2","input","imageUploaderStyles","container","width","height","uploadBtnContainer","uploadBtn","buttoncontainer1","buttontext1","StyleSheet","create","flex","color","marginBottom","alignItems","backgroundColor","top","textAlign","fontSize","marginTop","borderRadius","paddingTop","justifyContent","paddingLeft","right","signuptext","flexDirection","elevation","position","overflow","opacity","bottom","display"],"mappings":"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","sourcesContent":["  import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  View,\r\n  Platform,\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport styled from 'styled-components/native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { SignupUser } from './SignupUser';\r\nimport { SignupUser1 } from './SignupUser1';\r\n\r\nexport const SignupUser2 = ({ route,navigation }) => {\r\n  const [image, setImage] = useState(null);\r\n  const {\r\n    username,\r\n    phone,\r\n    email,\r\n    password,\r\n    confirm_password,\r\n    nid,\r\n    address,\r\n    country,\r\n    city,\r\n    isValidUser,\r\n    isValidServiceProvider\r\n  } = route.params;\r\n  /*console.log(\r\n    username,\r\n    phone,\r\n    email,\r\n    password,\r\n    confirm_password,\r\n    nid,\r\n    address,\r\n    country,\r\n    city,\r\n    isValidUser,\r\n    isValidServiceProvider\r\n  );*/\r\n  const addImage = async () => {\r\n    let _image = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!_image.cancelled) {\r\n      setImage(_image.uri);\r\n    }\r\n  };\r\n  function signup() {\r\n    let user = {\r\n      username,\r\n      email,\r\n      phone,\r\n      password,\r\n      nid,\r\n      country,\r\n      city,\r\n      address,\r\n      isValidUser,\r\n      isValidServiceProvider,\r\n      image\r\n    };\r\n    console.warn(user);\r\n    var url = 'http://127.0.0.1:3000/api/v1/users/signup';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application.json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error('Error:', error))\r\n      .then((response) => console.log('Success:', response));\r\n      navigation.navigate('Home')\r\n  }\r\n  return (\r\n    <View style={styles.container2}>\r\n      <Text style={styles.input}> Adding Profile Picture</Text>\r\n      <View style={imageUploaderStyles.container}>\r\n        {image && (\r\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n        )}\r\n        <View style={imageUploaderStyles.uploadBtnContainer}>\r\n          <TouchableOpacity\r\n            onPress={addImage}\r\n            style={imageUploaderStyles.uploadBtn}>\r\n            <Text>{image ? 'Edit' : 'Upload'} Image</Text>\r\n            <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={signup}>\r\n        <Text style={styles.buttontext1}>SignUp</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container2: {\r\n    flex: 1,\r\n    color: 'black',\r\n    marginBottom: 0,\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  input: {\r\n    color: 'black',\r\n    top: 1,\r\n    textAlign: 'center',\r\n    fontSize: 30,\r\n    marginTop: 90,\r\n  },\r\n\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 45,\r\n    backgroundColor: '#ff00ff',\r\n    paddingTop: 1,\r\n    justifyContent: 'center',\r\n    marginTop: 60,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext1: {\r\n    textAlign: 'center',\r\n    color: 'black',\r\n    fontSize: 20,\r\n    right: 30,\r\n  },\r\n  signuptext: {\r\n    textAlign: 'center',\r\n    color: 'black',\r\n    fontSize: 18,\r\n    flexDirection: 'row',\r\n    marginTop: 20,\r\n  },\r\n});\r\nconst imageUploaderStyles = StyleSheet.create({\r\n  container: {\r\n    elevation: 2,\r\n    height: 200,\r\n    width: 200,\r\n    top: 30,\r\n    backgroundColor: '#efefef',\r\n    position: 'relative',\r\n    borderRadius: 999,\r\n    overflow: 'hidden',\r\n  },\r\n  uploadBtnContainer: {\r\n    opacity: 0.7,\r\n    position: 'absolute',\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'lightgray',\r\n    width: '100%',\r\n    height: '25%',\r\n  },\r\n  uploadBtn: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}