{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport styled from \"styled-components/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    isValidEmail: true,\n    isValidPassword: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var handleValidus = function handleValidus(val) {\n    var reg = /@./;\n\n    if (val.trim().length >= 4 && reg.test(val) !== false) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidEmail: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidEmail: false\n      }));\n    }\n  };\n\n  var handleValidus1 = function handleValidus1(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailError = _useState2[0],\n      SetEamilError = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordError = _useState4[0],\n      SetpasswordError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      SetEamil = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      Setpassword = _useState8[1];\n\n  function Login1() {\n    var item = {\n      password: password,\n      email: email\n    };\n    console.warn(item);\n    var url = \"http://127.0.0.1:52020/api/v1/user/login\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify(item)\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      return console.error(\"Error:\", error);\n    }).then(function (response) {\n      return console.log(\"Success:\", response);\n    });\n    navigation.navigate(\"Home\");\n  }\n\n  function Emilvalidator() {\n    (function (emailError) {\n      return SetEamilError(\"emil feild can not be empty\");\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext,\n        placeholder: \"Enter Email\",\n        placeholderTextColor: \"gray\",\n        value: email,\n        onEndEditing: function onEndEditing(e) {\n          return handleValidus(e.nativeEvent.text);\n        },\n        onBlur: Emilvalidator,\n        onChangeText: function onChangeText(email) {\n          return SetEamil(email);\n        }\n      }), _jsx(MaterialCommunityIcons, {\n        style: styles.icon1,\n        name: \"email-outline\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data.isValidEmail ? null : _jsx(Text, {\n      style: {\n        color: \"red\"\n      },\n      children: \" email must have '@' and '.'\"\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext,\n        placeholder: \"Enter Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"gray\",\n        value: password,\n        onEndEditing: function onEndEditing(e) {\n          return handleValidus1(e.nativeEvent.text);\n        },\n        onChangeText: function onChangeText(password) {\n          return Setpassword(password);\n        }\n      }), _jsx(MaterialIcons, {\n        style: styles.icon1,\n        name: \"lock-outline\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data.isValidPassword ? null : _jsxs(Text, {\n      style: {\n        color: \"red\"\n      },\n      children: [\" \", \"username must be 8 charactors long.\"]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer,\n      onPress: Login1,\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.signuptextCont,\n      children: [_jsx(Text, {\n        style: styles.signupText,\n        children: \" Don't have an account yet? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Typesignup\");\n        },\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Signup\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  input: {\n    flexDirection: \"row\",\n    width: 300\n  },\n  signupText: {\n    paddingRight: 10,\n    marginRight: 10\n  },\n  title: {\n    color: \"black\",\n    fontSize: 40,\n    fontFamily: \"Open Sans\",\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  inputtext: {\n    borderRadius: 9,\n    width: 300,\n    height: 40,\n    borderColor: \"#ff00ff\",\n    borderWidth: 1,\n    paddingHorizontal: 35,\n    fontsize: 30,\n    color: \"black\",\n    marginVertical: 10\n  },\n  icon1: {\n    position: \"absolute\",\n    top: 18,\n    left: 5\n  },\n  signuptextCont: {\n    flex: 0,\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    paddingVertical: 1,\n    flexDirection: \"row\",\n    marginTop: 30\n  },\n  buttoncontainer: {\n    borderRadius: 15,\n    width: 150,\n    height: 40,\n    backgroundColor: \"#ff00ff\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    paddingLeft: 60\n  },\n  buttontext: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: 20,\n    right: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/login.js"],"names":["React","useState","styled","Ionicons","MaterialIcons","MaterialCommunityIcons","Feather","Login","navigation","isValidEmail","isValidPassword","data","setData","handleValidus","val","reg","trim","length","test","handleValidus1","emailError","SetEamilError","passwordError","SetpasswordError","email","SetEamil","password","Setpassword","Login1","item","console","warn","url","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","log","navigate","Emilvalidator","styles","container","title","input","inputtext","e","nativeEvent","text","icon1","color","buttoncontainer","buttontext","signuptextCont","signupText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","width","paddingRight","marginRight","fontSize","fontFamily","marginBottom","borderRadius","height","borderColor","borderWidth","paddingHorizontal","fontsize","marginVertical","position","top","left","paddingVertical","marginTop","paddingTop","paddingLeft","textAlign","right"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nexport const Login = ({ navigation }) => {\r\n  const [data, setData] = React.useState({\r\n    isValidEmail: true,\r\n    isValidPassword: true,\r\n  });\r\n  const handleValidus = (val) => {\r\n    let reg = /@./;\r\n    if (val.trim().length >= 4 && reg.test(val) !== false) {\r\n      setData({\r\n        ...data,\r\n        isValidEmail: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidEmail: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleValidus1 = (val) => {\r\n    if (val.trim().length >= 8) {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: true,\r\n      });\r\n    } else {\r\n      setData({\r\n        ...data,\r\n        isValidPassword: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [emailError, SetEamilError] = useState(true);\r\n  //const passwordError=useState('');\r\n  const [passwordError, SetpasswordError] = useState();\r\n\r\n  const [email, SetEamil] = useState(\"\");\r\n  const [password, Setpassword] = useState(\"\");\r\n  function Login1() {\r\n    let item = { password, email };\r\n    console.warn(item);\r\n\r\n    var url = \"http://127.0.0.1:52020/api/v1/user/login\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application.json\",\r\n      },\r\n      body: JSON.stringify(item),\r\n    })\r\n      .then((response) => response.json())\r\n      .catch((error) => console.error(\"Error:\", error))\r\n      .then((response) => console.log(\"Success:\", response));\r\n    navigation.navigate(\"Home\");\r\n  }\r\n  function Emilvalidator() {\r\n    /*if(email==\"\")\r\n{*/\r\n    (emailError) => SetEamilError(\"emil feild can not be empty\");\r\n    //}\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Enter Email\"\r\n          placeholderTextColor=\"gray\"\r\n          value={email}\r\n          onEndEditing={(e) => handleValidus(e.nativeEvent.text)}\r\n          onBlur={Emilvalidator}\r\n          onChangeText={(email) => SetEamil(email)}\r\n        />\r\n        <MaterialCommunityIcons\r\n          style={styles.icon1}\r\n          name=\"email-outline\"\r\n          size={24}\r\n          color=\"gray\"\r\n        />\r\n      </View>\r\n      {data.isValidEmail ? null : (\r\n        <Text style={{ color: \"red\" }}> email must have '@' and '.'</Text>\r\n      )}\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Enter Password\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor=\"gray\"\r\n          value={password}\r\n          onEndEditing={(e) => handleValidus1(e.nativeEvent.text)}\r\n          onChangeText={(password) => Setpassword(password)}\r\n        />\r\n        <MaterialIcons\r\n          style={styles.icon1}\r\n          name=\"lock-outline\"\r\n          size={24}\r\n          color=\"gray\"\r\n        />\r\n      </View>\r\n      {data.isValidPassword ? null : (\r\n        <Text style={{ color: \"red\" }}>\r\n          {\" \"}\r\n          username must be 8 charactors long.\r\n        </Text>\r\n      )}\r\n      <TouchableOpacity\r\n        style={styles.buttoncontainer}\r\n        onPress={Login1}\r\n        // onPress={() => navigation.navigate('TypeSignup')}\r\n        /**/\r\n      >\r\n        <Text style={styles.buttontext}>Login</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.signuptextCont}>\r\n        <Text style={styles.signupText}> Don't have an account yet? </Text>\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"Typesignup\")}>\r\n          <Text style={styles.buttontext}>Signup</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  input: {\r\n    flexDirection: \"row\",\r\n    width: 300,\r\n  },\r\n  signupText: {\r\n    paddingRight: 10,\r\n\r\n    marginRight: 10,\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: 40,\r\n    fontFamily: \"Open Sans\",\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n\r\n  inputtext: {\r\n    borderRadius: 9,\r\n    width: 300,\r\n    height: 40,\r\n    borderColor: \"#ff00ff\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 35,\r\n    fontsize: 30,\r\n    color: \"black\",\r\n    marginVertical: 10,\r\n  },\r\n  icon1: {\r\n    position: \"absolute\",\r\n    top: 18,\r\n    left: 5,\r\n  },\r\n  signuptextCont: {\r\n    flex: 0,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    paddingVertical: 1,\r\n    flexDirection: \"row\",\r\n    marginTop: 30,\r\n  },\r\n  buttoncontainer: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 40,\r\n    backgroundColor: \"#ff00ff\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 20,\r\n    right: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}