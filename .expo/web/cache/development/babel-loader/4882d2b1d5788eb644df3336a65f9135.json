{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var PetAccount = function PetAccount() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      petname = _useState2[0],\n      SetpetName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      Settype = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      breed = _useState6[0],\n      Setbreed = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      weight = _useState8[0],\n      Setweight = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      age = _useState10[0],\n      Setage = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gender = _useState12[0],\n      Setgender = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      color = _useState14[0],\n      Setcolor = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      description = _useState16[0],\n      Setdescription = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      image = _useState18[0],\n      setImage = _useState18[1];\n\n  var addImage = function addImage() {\n    var _image;\n\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            _image = _context.sent;\n\n            if (!_image.cancelled) {\n              setImage(_image.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function CreateProfile() {\n    var pet = {\n      petname: petname,\n      type: type,\n      breed: breed,\n      weight: weight,\n      age: age,\n      gender: gender,\n      color: color,\n      description: description,\n      image: image\n    };\n    axios.post(\"\", pet, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"My-Custom-Header\": \"foobar\",\n        Authorization: \"Bearer my-token\"\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Create Pet Profile\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Fill your pet details\"\n      }), _jsxs(View, {\n        style: imageUploaderStyles.container,\n        children: [image && _jsx(Image, {\n          source: {\n            uri: image\n          },\n          style: {\n            width: 200,\n            height: 200\n          }\n        }), _jsx(View, {\n          style: imageUploaderStyles.uploadBtnContainer,\n          children: _jsxs(TouchableOpacity, {\n            onPress: addImage,\n            style: imageUploaderStyles.uploadBtn,\n            children: [_jsxs(Text, {\n              children: [image ? 'Edit' : 'Upload', \" Image\"]\n            }), _jsx(AntDesign, {\n              name: \"camera\",\n              size: 20,\n              color: \"black\"\n            })]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.txtin,\n        children: [_jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            style: styles.inputtext,\n            placeholder: \"Pet Name\",\n            onChangeText: function onChangeText(petname) {\n              return Setpetname(petname);\n            },\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            style: styles.inputtext,\n            placeholder: \"Type\",\n            onChangeText: function onChangeText(type) {\n              return Settype(type);\n            },\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            style: styles.inputtext,\n            placeholder: \"Breed\",\n            onChangeText: function onChangeText(breed) {\n              return Setbreed(breed);\n            },\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            style: styles.inputtext,\n            placeholder: \"Weight\",\n            onChangeText: function onChangeText(weight) {\n              return Setweight(weight);\n            },\n            placeholderTextColor: \"gray\"\n          })\n        }), _jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            style: styles.inputtext,\n            placeholder: \"Age\",\n            onChangeText: function onChangeText(age) {\n              return Setage(age);\n            },\n            placeholderTextColor: \"gray\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext,\n          placeholder: \"Gender\",\n          onChangeText: function onChangeText(gender) {\n            return Setgender(gender);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext,\n          placeholder: \"Color\",\n          onChangeText: function onChangeText(color) {\n            return Setcolor(color);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          style: styles.inputtext1,\n          placeholder: \"Description\",\n          onChangeText: function onChangeText(description) {\n            return Setdescription(description);\n          },\n          placeholderTextColor: \"gray\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttoncontainer,\n        children: _jsx(Text, {\n          style: styles.buttontext,\n          children: \"Create Profile\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"rgba(253,239,197,1)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 400\n  },\n  input: {\n    flexDirection: \"row\"\n  },\n  title: {\n    color: \"#084594\",\n    fontSize: 30,\n    alignItems: \"center\",\n    marginTop: 90,\n    paddingBottom: 20,\n    fontWeight: 'bold',\n    marginRight: 90,\n    bottom: 30\n  },\n  subtitle: {\n    fontSize: 20,\n    marginRight: 160,\n    bottom: 40\n  },\n  inputtext: {\n    borderRadius: 9,\n    width: 350,\n    height: 50,\n    borderColor: \"white\",\n    borderWidth: 1,\n    paddingHorizontal: 20,\n    fontSize: 15,\n    backgroundColor: \"white\",\n    marginVertical: 10,\n    marginRight: -10\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 350,\n    height: 150,\n    borderColor: \"white\",\n    borderWidth: 1,\n    paddingHorizontal: 20,\n    paddingBottom: 80,\n    fontSize: 15,\n    backgroundColor: \"white\",\n    marginVertical: 10,\n    marginRight: -10\n  },\n  buttoncontainer: {\n    borderRadius: 15,\n    width: 350,\n    height: 50,\n    backgroundColor: \"#ED7354\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 30,\n    paddingLeft: 50,\n    marginLeft: 10\n  },\n  buttontext: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 20,\n    right: 30,\n    fontWeight: 'bold'\n  }\n});\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    bottom: 10,\n    backgroundColor: '#efefef',\n    position: 'relative',\n    borderRadius: 999,\n    overflow: 'hidden'\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'lightgray',\n    width: '100%',\n    height: '25%'\n  },\n  uploadBtn: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/PetZone1/petZone/components/screens/PetAccount.js"],"names":["React","useState","useEffect","AntDesign","axios","PetAccount","petname","SetpetName","type","Settype","breed","Setbreed","weight","Setweight","age","Setage","gender","Setgender","color","Setcolor","description","Setdescription","image","setImage","addImage","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_image","cancelled","uri","CreateProfile","pet","post","headers","Authorization","then","response","console","log","catch","error","styles","container","title","subtitle","imageUploaderStyles","width","height","uploadBtnContainer","uploadBtn","txtin","input","inputtext","Setpetname","inputtext1","buttoncontainer","buttontext","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingBottom","flexDirection","fontSize","marginTop","fontWeight","marginRight","bottom","borderRadius","borderColor","borderWidth","paddingHorizontal","marginVertical","paddingTop","paddingLeft","marginLeft","textAlign","right","elevation","position","overflow","opacity","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;;;AAcA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,kBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA4BV,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAsBZ,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOa,GAAP;AAAA,MAAYC,MAAZ;;AACA,oBAA4Bd,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAA0BhB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOiB,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAsClB,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOmB,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA0BpB,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOqB,KAAP;AAAA,MAAcC,QAAd;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMC,WAAW,CAACC,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEF,WAAW,CAACG,gBAAZ,CAA6BC,MADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADN;;AAAA;AACTC,YAAAA,MADS;;AAOb,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrBX,cAAAA,QAAQ,CAACU,MAAM,CAACE,GAAR,CAAR;AACD;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAWE,WAASC,aAAT,GAAyB;AACvB,QAAIC,GAAG,GAAG;AACR/B,MAAAA,OAAO,EAAEA,OADD;AAERE,MAAAA,IAAI,EAAEA,IAFE;AAGRE,MAAAA,KAAK,EAAEA,KAHC;AAIRE,MAAAA,MAAM,EAAEA,MAJA;AAKRE,MAAAA,GAAG,EAAEA,GALG;AAMRE,MAAAA,MAAM,EAAEA,MANA;AAORE,MAAAA,KAAK,EAAEA,KAPC;AAQRE,MAAAA,WAAW,EAAEA,WARL;AASRE,MAAAA,KAAK,EAAEA;AATC,KAAV;AAWAlB,IAAAA,KAAK,CACFkC,IADH,CACQ,EADR,EACYD,GADZ,EACiB;AACbE,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,4BAAoB,QAFb;AAGPC,QAAAA,aAAa,EAAE;AAHR;AADI,KADjB,EAQGC,IARH,CAQQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAVH,EAWGG,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAbH;AAcD;;AACH,SACE,KAAC,UAAD;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA,QAFF,EAGE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,mBAAmB,CAACH,SAAjC;AAAA,mBACD1B,KAAK,IACJ,KAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAAEa,YAAAA,GAAG,EAAEb;AAAP,WAAf;AAA+B,UAAA,KAAK,EAAE;AAAE8B,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE;AAAtB;AAAtC,UAFA,EAIF,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,mBAAmB,CAACG,kBAAjC;AAAA,oBACE,MAAC,gBAAD;AACE,YAAA,OAAO,EAAE9B,QADX;AAEE,YAAA,KAAK,EAAE2B,mBAAmB,CAACI,SAF7B;AAAA,uBAGE,MAAC,IAAD;AAAA,yBAAOjC,KAAK,GAAG,MAAH,GAAY,QAAxB;AAAA,cAHF,EAIE,KAAC,SAAD;AAAW,cAAA,IAAI,EAAC,QAAhB;AAAyB,cAAA,IAAI,EAAE,EAA/B;AAAmC,cAAA,KAAK,EAAC;AAAzC,cAJF;AAAA;AADF,UAJE;AAAA,QAHF,EAgBF,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEyB,MAAM,CAACS,KAApB;AAAA,mBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAET,MAAM,CAACU,KAApB;AAAA,oBACG,KAAC,SAAD;AACE,YAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,YAAY,EAAE,sBAACpD,OAAD;AAAA,qBAAaqD,UAAU,CAACrD,OAAD,CAAvB;AAAA,aAHhB;AAIE,YAAA,oBAAoB,EAAC;AAJvB;AADH,UADD,EASG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEyC,MAAM,CAACU,KAApB;AAAA,oBACC,KAAC,SAAD;AACE,YAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,YAAY,EAAE,sBAAClD,IAAD;AAAA,qBAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,aAHhB;AAIE,YAAA,oBAAoB,EAAC;AAJvB;AADD,UATH,EAiBI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEuC,MAAM,CAACU,KAApB;AAAA,oBACA,KAAC,SAAD;AACE,YAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,YAAA,WAAW,EAAC,OAFd;AAGE,YAAA,YAAY,EAAE,sBAAChD,KAAD;AAAA,qBAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,aAHhB;AAIE,YAAA,oBAAoB,EAAC;AAJvB;AADA,UAjBJ,EAyBG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEqC,MAAM,CAACU,KAApB;AAAA,oBACC,KAAC,SAAD;AACE,YAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,YAAA,WAAW,EAAC,QAFd;AAGE,YAAA,YAAY,EAAE,sBAAC9C,MAAD;AAAA,qBAAYC,SAAS,CAACD,MAAD,CAArB;AAAA,aAHhB;AAIE,YAAA,oBAAoB,EAAC;AAJvB;AADD,UAzBH,EAiCD,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEmC,MAAM,CAACU,KAApB;AAAA,oBACG,KAAC,SAAD;AACE,YAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,YAAA,WAAW,EAAC,KAFd;AAGE,YAAA,YAAY,EAAE,sBAAC5C,GAAD;AAAA,qBAASC,MAAM,CAACD,GAAD,CAAf;AAAA,aAHhB;AAIE,YAAA,oBAAoB,EAAC;AAJvB;AADH,UAjCC;AAAA,QAhBE,EA0DF,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEiC,MAAM,CAACU,KAApB;AAAA,kBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,UAAA,WAAW,EAAC,QAFd;AAGE,UAAA,YAAY,EAAE,sBAAC1C,MAAD;AAAA,mBAAYC,SAAS,CAACD,MAAD,CAArB;AAAA,WAHhB;AAIE,UAAA,oBAAoB,EAAC;AAJvB;AADF,QA1DE,EAkEA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE+B,MAAM,CAACU,KAApB;AAAA,kBACA,KAAC,SAAD;AACE,UAAA,KAAK,EAAEV,MAAM,CAACW,SADhB;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,YAAY,EAAE,sBAACxC,KAAD;AAAA,mBAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,WAHhB;AAIE,UAAA,oBAAoB,EAAC;AAJvB;AADA,QAlEA,EA0EF,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE6B,MAAM,CAACU,KAApB;AAAA,kBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEV,MAAM,CAACa,UADhB;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,YAAY,EAAE,sBAACxC,WAAD;AAAA,mBAAiBC,cAAc,CAACD,WAAD,CAA/B;AAAA,WAHhB;AAIE,UAAA,oBAAoB,EAAC;AAJvB;AADF,QA1EE,EAkFE,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE2B,MAAM,CAACc,eAAhC;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,MAAM,CAACe,UAApB;AAAA;AAAA;AADF,QAlFF;AAAA;AADF,IADF;AA0FD,CA5II;AA8IL,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,eAAe,EAAE,qBADR;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,aAAa,EAAE;AALN,GADoB;AAQ/BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,aAAa,EAAE;AADV,GARwB;AAW/BrB,EAAAA,KAAK,EAAE;AACL/B,IAAAA,KAAK,EAAE,SADF;AAELqD,IAAAA,QAAQ,EAAE,EAFL;AAGLH,IAAAA,UAAU,EAAE,QAHP;AAILI,IAAAA,SAAS,EAAE,EAJN;AAKLH,IAAAA,aAAa,EAAE,EALV;AAMLI,IAAAA,UAAU,EAAC,MANN;AAOLC,IAAAA,WAAW,EAAC,EAPP;AAQLC,IAAAA,MAAM,EAAC;AARF,GAXwB;AAqB/BzB,EAAAA,QAAQ,EAAC;AACPqB,IAAAA,QAAQ,EAAE,EADH;AAEPG,IAAAA,WAAW,EAAC,GAFL;AAGPC,IAAAA,MAAM,EAAC;AAHA,GArBsB;AA0B/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,YAAY,EAAE,CADL;AAETxB,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITwB,IAAAA,WAAW,EAAE,OAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,iBAAiB,EAAE,EANV;AAOTR,IAAAA,QAAQ,EAAE,EAPD;AAQTN,IAAAA,eAAe,EAAE,OARR;AASTe,IAAAA,cAAc,EAAE,EATP;AAUTN,IAAAA,WAAW,EAAC,CAAC;AAVJ,GA1BoB;AAsC/Bd,EAAAA,UAAU,EAAC;AACPgB,IAAAA,YAAY,EAAE,CADP;AAEPxB,IAAAA,KAAK,EAAE,GAFA;AAGPC,IAAAA,MAAM,EAAE,GAHD;AAIPwB,IAAAA,WAAW,EAAE,OAJN;AAKPC,IAAAA,WAAW,EAAE,CALN;AAMPC,IAAAA,iBAAiB,EAAE,EANZ;AAOPV,IAAAA,aAAa,EAAC,EAPP;AAQPE,IAAAA,QAAQ,EAAE,EARH;AASPN,IAAAA,eAAe,EAAE,OATV;AAUPe,IAAAA,cAAc,EAAE,EAVT;AAWPN,IAAAA,WAAW,EAAC,CAAC;AAXN,GAtCoB;AAqD/Bb,EAAAA,eAAe,EAAE;AACfe,IAAAA,YAAY,EAAE,EADC;AAEfxB,IAAAA,KAAK,EAAE,GAFQ;AAGfC,IAAAA,MAAM,EAAE,EAHO;AAIfY,IAAAA,eAAe,EAAE,SAJF;AAKfgB,IAAAA,UAAU,EAAE,CALG;AAMfd,IAAAA,cAAc,EAAE,QAND;AAOfK,IAAAA,SAAS,EAAE,EAPI;AAQfU,IAAAA,WAAW,EAAE,EARE;AASfC,IAAAA,UAAU,EAAC;AATI,GArDc;AAgE/BrB,EAAAA,UAAU,EAAE;AACVsB,IAAAA,SAAS,EAAE,QADD;AAEVlE,IAAAA,KAAK,EAAE,OAFG;AAGVqD,IAAAA,QAAQ,EAAE,EAHA;AAIVc,IAAAA,KAAK,EAAE,EAJG;AAKVZ,IAAAA,UAAU,EAAC;AALD;AAhEmB,CAAlB,CAAf;AAyEA,IAAMtB,mBAAmB,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC5ChB,EAAAA,SAAS,EAAE;AACTsC,IAAAA,SAAS,EAAE,CADF;AAETjC,IAAAA,MAAM,EAAE,GAFC;AAGTD,IAAAA,KAAK,EAAE,GAHE;AAITuB,IAAAA,MAAM,EAAE,EAJC;AAKTV,IAAAA,eAAe,EAAE,SALR;AAMTsB,IAAAA,QAAQ,EAAE,UAND;AAOTX,IAAAA,YAAY,EAAE,GAPL;AAQTY,IAAAA,QAAQ,EAAE;AARD,GADiC;AAW5ClC,EAAAA,kBAAkB,EAAE;AAClBmC,IAAAA,OAAO,EAAE,GADS;AAElBF,IAAAA,QAAQ,EAAE,UAFQ;AAGlBF,IAAAA,KAAK,EAAE,CAHW;AAIlBV,IAAAA,MAAM,EAAE,CAJU;AAKlBV,IAAAA,eAAe,EAAE,WALC;AAMlBb,IAAAA,KAAK,EAAE,MANW;AAOlBC,IAAAA,MAAM,EAAE;AAPU,GAXwB;AAoB5CE,EAAAA,SAAS,EAAE;AACTmC,IAAAA,OAAO,EAAE,MADA;AAETtB,IAAAA,UAAU,EAAE,QAFH;AAGTD,IAAAA,cAAc,EAAE;AAHP;AApBiC,CAAlB,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StatusBar,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Button,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Image,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport axios from \"axios\"\r\nexport const PetAccount = () => {\r\n    const [petname, SetpetName] = useState(\"\");\r\n    const [type, Settype] = useState(\"\");\r\n    const [breed, Setbreed] = useState(\"\");\r\n    const [weight, Setweight] = useState(\"\");\r\n    const [age, Setage] = useState(\"\");\r\n    const [gender, Setgender] = useState(\"\");\r\n    const [color, Setcolor] = useState(\"\");\r\n    const [description, Setdescription] = useState(\"\");\r\n    const [image, setImage] = useState(null);\r\n \r\n   \r\n    const addImage = async () => {\r\n        let _image = await ImagePicker.launchImageLibraryAsync({\r\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n          allowsEditing: true,\r\n          aspect: [4, 3],\r\n          quality: 1,\r\n        });\r\n        if (!_image.cancelled) {\r\n          setImage(_image.uri);\r\n        }\r\n      };\r\n      function CreateProfile() {\r\n        let pet = {\r\n          petname: petname,\r\n          type: type,\r\n          breed: breed,\r\n          weight: weight,\r\n          age: age,\r\n          gender: gender,\r\n          color: color,\r\n          description: description,\r\n          image: image,\r\n        };\r\n        axios\r\n          .post(\"\", pet, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"My-Custom-Header\": \"foobar\",\r\n              Authorization: \"Bearer my-token\",\r\n            },\r\n          })\r\n          .then(function (response) {\r\n            console.log(response)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error); \r\n          });\r\n      }\r\n    return (\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>Create Pet Profile</Text>\r\n          <Text style={styles.subtitle}>Fill your pet details</Text>\r\n          <View style={imageUploaderStyles.container}>\r\n        {image && (\r\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n        )}\r\n        <View style={imageUploaderStyles.uploadBtnContainer}>\r\n          <TouchableOpacity\r\n            onPress={addImage}\r\n            style={imageUploaderStyles.uploadBtn}>\r\n            <Text>{image ? 'Edit' : 'Upload'} Image</Text>\r\n            <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={styles.txtin}>\r\n       <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Pet Name\"\r\n            onChangeText={(petname) => Setpetname(petname)}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n        </View>\r\n         <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Type\"\r\n            onChangeText={(type) => Settype(type)}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n        </View>\r\n          <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Breed\"\r\n            onChangeText={(breed) => Setbreed(breed)}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n        </View>\r\n         <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputtext}\r\n            placeholder=\"Weight\"\r\n            onChangeText={(weight) => Setweight(weight)}\r\n            placeholderTextColor=\"gray\"\r\n          />\r\n        </View>\r\n     <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Age\"\r\n          onChangeText={(age) => Setage(age)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n     </View> \r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Gender\"\r\n          onChangeText={(gender) => Setgender(gender)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n        <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext}\r\n          placeholder=\"Color\"\r\n          onChangeText={(color) => Setcolor(color)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Description\"\r\n          onChangeText={(description) => Setdescription(description)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n      </View>\r\n          <TouchableOpacity style={styles.buttoncontainer} >\r\n            <Text style={styles.buttontext}>Create Profile</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: \"rgba(253,239,197,1)\",\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      paddingBottom: 400,\r\n    },\r\n    input: {\r\n      flexDirection: \"row\",\r\n    },\r\n    title: {\r\n      color: \"#084594\",\r\n      fontSize: 30,\r\n      alignItems: \"center\",\r\n      marginTop: 90,\r\n      paddingBottom: 20,\r\n      fontWeight:'bold',\r\n      marginRight:90,\r\n      bottom:30\r\n    },\r\n    subtitle:{\r\n      fontSize: 20,\r\n      marginRight:160,\r\n      bottom:40\r\n    },\r\n    inputtext: {\r\n      borderRadius: 9,\r\n      width: 350,\r\n      height: 50,\r\n      borderColor: \"white\",\r\n      borderWidth: 1,\r\n      paddingHorizontal: 20,\r\n      fontSize: 15,\r\n      backgroundColor: \"white\",\r\n      marginVertical: 10,\r\n      marginRight:-10,\r\n    },\r\n    inputtext1:{\r\n        borderRadius: 9,\r\n        width: 350,\r\n        height: 150,\r\n        borderColor: \"white\",\r\n        borderWidth: 1,\r\n        paddingHorizontal: 20,\r\n        paddingBottom:80,\r\n        fontSize: 15,\r\n        backgroundColor: \"white\",\r\n        marginVertical: 10,\r\n        marginRight:-10,\r\n\r\n    },\r\n    \r\n    buttoncontainer: {\r\n      borderRadius: 15,\r\n      width: 350,\r\n      height: 50,\r\n      backgroundColor: \"#ED7354\",\r\n      paddingTop: 1,\r\n      justifyContent: \"center\",\r\n      marginTop: 30,\r\n      paddingLeft: 50,\r\n      marginLeft:10\r\n    },\r\n    buttontext: {\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      fontSize: 20,\r\n      right: 30,\r\n      fontWeight:'bold'\r\n    },\r\n  });\r\n  \r\n  const imageUploaderStyles = StyleSheet.create({\r\n    container: {\r\n      elevation: 2,\r\n      height: 200,\r\n      width: 200,\r\n      bottom: 10,\r\n      backgroundColor: '#efefef',\r\n      position: 'relative',\r\n      borderRadius: 999,\r\n      overflow: 'hidden',\r\n    },\r\n    uploadBtnContainer: {\r\n      opacity: 0.7,\r\n      position: 'absolute',\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'lightgray',\r\n      width: '100%',\r\n      height: '25%',\r\n    },\r\n    uploadBtn: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}