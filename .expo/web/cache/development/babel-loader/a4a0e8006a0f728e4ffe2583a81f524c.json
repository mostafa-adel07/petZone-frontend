{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Constants from 'expo-constants';\nimport styled from \"styled-components/native\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { SignupUser } from \"./SignupUser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TypeSignup = function TypeSignup(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    isValidUser: true,\n    isValidServiceProvider: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container1,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: function onPress() {\n        return navigation.navigate('Signup', {\n          isValidUser: true,\n          isValidServiceProvider: false\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Signup as user\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: function onPress() {\n        return navigation.navigate('Signup', {\n          isValidUser: false,\n          isValidServiceProvider: true\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Signup as service provider\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container1: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 50,\n    backgroundColor: 'white'\n  },\n  input1: {\n    flexDirection: 'row'\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 300,\n    height: 40,\n    borderColor: '#ff00ff',\n    borderWidth: 1,\n    paddingHorizontal: 35,\n    fontSize: 30,\n    color: 'black',\n    marginVertical: 10\n  },\n  icon1: {\n    position: \"absolute\",\n    top: 18,\n    left: 5\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 300,\n    height: 45,\n    backgroundColor: '#ff00ff',\n    paddingTop: 1,\n    justifyContent: 'center',\n    marginTop: 30,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: 'center',\n    color: 'black',\n    fontSize: 20,\n    right: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/typeSignup.js"],"names":["React","Constants","styled","Ionicons","MaterialIcons","MaterialCommunityIcons","Entypo","Feather","AntDesign","SignupUser","TypeSignup","navigation","useState","isValidUser","isValidServiceProvider","data","setData","styles","container1","buttoncontainer1","navigate","buttontext1","StyleSheet","create","flex","justifyContent","alignItems","paddingBottom","backgroundColor","input1","flexDirection","inputtext1","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","fontSize","color","marginVertical","icon1","position","top","left","paddingTop","marginTop","paddingLeft","textAlign","right"],"mappings":"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","sourcesContent":[" import React from 'react';\r\nimport { Text, View, StyleSheet,SafeAreaView,TouchableOpacity,Button } from 'react-native';\r\nimport {TextInput} from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport styled from \"styled-components/native\";\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons'; \r\nimport { Feather } from '@expo/vector-icons'; \r\nimport { AntDesign } from '@expo/vector-icons';\r\n//import {UserNavigator} from '../navigators/UserNavigator';\r\n//import {ServiceProviderNavigator} from '../navigators/ServiceProviderNavigator';\r\nimport {SignupUser} from './SignupUser'\r\nexport const TypeSignup= ({navigation})=>{\r\n/*function signupUser({UserNavigator}){\r\n   <UserNavigator/>\r\n  }\r\nfunction signupServiceProvider(){\r\n    <ServiceProviderNavigator/>\r\n  }*/\r\n  const [data,setData] = React.useState({\r\n  isValidUser:true,\r\n  isValidServiceProvider:true,\r\n});\r\n/*function SignupUser(){\r\n setData({\r\n      ...data,\r\n      isValidUser:true,\r\n      isValidServiceProvider:false\r\n    });\r\n    navigation.navigate('Signup')\r\n}\r\nfunction SignupServiceProvider(){\r\n setData({\r\n      ...data,\r\n      isValidUser:false,\r\n      isValidServiceProvider:true\r\n    });\r\n    navigation.navigate('Signup')\r\n}*/\r\n  return(\r\n     <View style={styles.container1}>  \r\n       <TouchableOpacity style = {styles.buttoncontainer1} onPress={()=>navigation.navigate('Signup', {\r\n         isValidUser:true,\r\n         isValidServiceProvider:false\r\n       })}>\r\n        <Text style = {styles.buttontext1}>Signup as user</Text>\r\n       </TouchableOpacity>\r\n        <TouchableOpacity style = {styles.buttoncontainer1} onPress = {()=>navigation.navigate('Signup',{\r\n          isValidUser:false,\r\n          isValidServiceProvider:true\r\n        })}>\r\n        <Text style = {styles.buttontext1}>Signup as service provider</Text>\r\n       </TouchableOpacity>\r\n    </View>\r\n\r\n  );  \r\n};\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer1:{\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems:'center',\r\n    paddingBottom:50,\r\n     backgroundColor :'white',\r\n  },\r\ninput1: {\r\n  flexDirection: 'row',\r\n},\r\n  inputtext1:{\r\n    \r\n    borderRadius:9,\r\n    width:300,\r\n    height:40,\r\n    borderColor:'#ff00ff',\r\n    borderWidth:1,\r\n    paddingHorizontal:35,\r\n    fontSize:30,\r\n    color:'black',\r\n    marginVertical:10,\r\n\r\n  },\r\n icon1:{\r\n  position:\"absolute\",\r\n  top:18,\r\n  left:5\r\n }, \r\n buttoncontainer1:{\r\n   borderRadius:15,\r\n   width:300,\r\n   height:45,\r\n   backgroundColor:'#ff00ff',\r\n   paddingTop:1,\r\n   justifyContent:'center',\r\n   marginTop:30,\r\n   paddingLeft:60,\r\n },\r\n buttontext1:{\r\n   textAlign:'center',\r\n   color:'black',\r\n   fontSize:20,\r\n   right:30,\r\n },\r\n});"]},"metadata":{},"sourceType":"module"}