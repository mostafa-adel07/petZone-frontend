{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from \"axios\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SP2 = function SP2(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  function confirm() {\n    axios({\n      method: \"post\",\n      url: \"https://petzone99.herokuap
p.com/api/v1/users/verifyEmail\",\n      data: {\n        email: email\n      }\n    }).then(function (response) {\n      navigation.navigate(\"AccountVerfication\");\n    }).catch(function (error) {});\n  }\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      verificationDocuments = _useState2[0],\n      SetVerificationDocuments = _useState2[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      userName = _route$params.userName,\n      phoneNumber = _route$params.phoneNumber,\n      email = _route$params.email,\n      password = _route$params.password,\n      passwordConfirm = _route$params.passwordConfirm,\n      nationalID = _route$params.nationalID,\n      address = _route$params.address,\n      country = _route$params.country,\n      city = _route$params.city,\n      role = _route$params.role,\n      image = _route$params.image,\n      type = _route$params.type,\n      workingHours = _route$params.workingHours,\n      finishingHour = _route$params.finishingHour,\n      offDays = _route$params.offDays,\n      landLine = _route$params.landLine,\n      ratePerHour = _route$params.ratePerHour;\n\n  var addImage = function addImage() {\n    var _image;\n\n    return _regeneratorRuntime.async(function addImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            _image = _context.sent;\n\n            if (!_image.cancelled) {\n              setImage(_image.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function signup() {\n    var user = {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirm: passwordConfirm,\n      userName: userName,\n      nationalID: nationalID,\n      city: city,\n      country: country,\n      address: address,\n      phoneNumber: phoneNumber,\n      role: role,\n      profilePicture: image,\n      serviceProvider: {\n        type: type,\n        workingHours: workingHours,\n        finishingHour: finishingHour,\n        offDays: offDays,\n        ratePerHour: ratePerHour,\n        landLine: landLine,\n        verificationDocuments: verificationDocuments\n      }\n    };\n    axios.post(\"https://petzone99.herokuap
p.com/api/v1/users/signup\", user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"My-Custom-Header\": \"foobar\",\n        Authorization: \"Bearer my-token\"\n      }\n    }).then(function (response) {\n      confirm();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container2,\n    children: [_jsx(Text, {\n      style: styles.input,\n      children: \" Upload verification Documents\"\n    }), _jsxs(View, {\n      style: imageUploaderStyles.container,\n      children: [image && _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 200,\n          height: 200\n        }\n      }), _jsx(View, {\n        style: imageUploaderStyles.uploadBtnContainer,\n        children: _jsxs(TouchableOpacity, {\n          onPress: addImage,\n          style: imageUploaderStyles.uploadBtn,\n          children: [_jsxs(Text, {\n            children: [image ? \"Edit\" : \"Upload\", \" Image\"]\n          }), _jsx(AntDesign, {\n            name: \"camera\",\n            size: 20,\n            color: \"black\"\n          })]\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: signup,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"SignUp\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container2: {\n    flex: 1,\n    marginBottom: 0,\n    alignItems: \"center\",\n    backgroundColor: \"rgb(250, 219, 216)\"\n  },\n  input: {\n    color: \"#084594\",\n    top: 1,\n    textAlign: \"center\",\n    fontSize: 24,\n    marginTop: 90,\n    fontWeight: \"bold\"\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: \"#EA5C2B\",\n    paddingTop: 1,\n    justifyContent: \"center\",\n    marginTop: 100,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: \"center\",\n    color: \"white\",\n    fontSize: 20,\n    right: 30,\n    fontWeight: \"bold\"\n  }\n});\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    top: 30,\n    backgroundColor: \"#efefef\",\n    position: \"relative\",\n    borderRadius: 999,\n    overflow: \"hidden\"\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"lightgray\",\n    width: \"100%\",\n    height: \"25%\"\n  },\n  uploadBtn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/PetZone1/petZone/components/screens/serviceProvider/SP2.js"],"names":["React","useState","axios","AntDesign","ImagePicker","SP2","route","navigation","confirm","method","url","data","email","then","response","navigate","catch","error","verificationDocuments","SetVerificationDocuments","params","name","userName","phoneNumber","password","passwordConfirm","nationalID","address","country","city","role","image","type","workingHours","finishingHour","offDays","landLine","ratePerHour","addImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_image","cancelled","setImage","uri","signup","user","profilePicture","serviceProvider","post","headers","Authorization","console","log","styles","container2","input","imageUploaderStyles","container","width","height","uploadBtnContainer","uploadBtn","buttoncontainer1","buttontext1","StyleSheet","create","flex","marginBottom","alignItems","backgroundColor","color","top","textAlign","fontSize","marginTop","fontWeight","borderRadius","paddingTop","justifyContent","paddingLeft","right","elevation","position","overflow","opacity","bottom","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\n\r\nimport { TextInput, ScrollView } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport const SP2 = ({ route, navigation }) => {\r\n  function confirm() {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://petzone99.herokuap
p.com/api/v1/users/verifyEmail\",\r\n      data: {\r\n        email,\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        navigation.navigate(\"AccountVerfication\");\r\n      })\r\n      .catch(function (error) {});\r\n  }\r\n  const [verificationDocuments, SetVerificationDocuments] = useState(\"\");\r\n  const {\r\n    name,\r\n    userName,\r\n    phoneNumber,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    nationalID,\r\n    address,\r\n    country,\r\n    city,\r\n    role,\r\n    image,\r\n    type,\r\n    workingHours,\r\n    finishingHour,\r\n    offDays,\r\n    landLine,\r\n    ratePerHour,\r\n  } = route.params;\r\n  const addImage = async () => {\r\n    let _image = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!_image.cancelled) {\r\n      setImage(_image.uri);\r\n    }\r\n  };\r\n  function signup() {\r\n    let user = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      userName: userName,\r\n      nationalID: nationalID,\r\n      city: city,\r\n      country: country,\r\n      address: address,\r\n      phoneNumber: phoneNumber,\r\n      role: role,\r\n      profilePicture: image,\r\n      serviceProvider: {\r\n        type: type,\r\n        workingHours: workingHours,\r\n        finishingHour: finishingHour,\r\n        offDays: offDays,\r\n        ratePerHour: ratePerHour,\r\n        landLine: landLine,\r\n        verificationDocuments: verificationDocuments,\r\n      },\r\n    };\r\n    axios\r\n      .post(\"https://petzone99.herokuap
p.com/api/v1/users/signup\", user, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"My-Custom-Header\": \"foobar\",\r\n          Authorization: \"Bearer my-token\",\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        confirm();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  return (\r\n    <View style={styles.container2}>\r\n      <Text style={styles.input}> Upload verification Documents</Text>\r\n      <View style={imageUploaderStyles.container}>\r\n        {image && (\r\n          <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n        )}\r\n        <View style={imageUploaderStyles.uploadBtnContainer}>\r\n          <TouchableOpacity\r\n            onPress={addImage}\r\n            style={imageUploaderStyles.uploadBtn}\r\n          >\r\n            <Text>{image ? \"Edit\" : \"Upload\"} Image</Text>\r\n            <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <TouchableOpacity style={styles.buttoncontainer1} onPress={signup}>\r\n        <Text style={styles.buttontext1}>SignUp</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container2: {\r\n    flex: 1,\r\n    marginBottom: 0,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb(250, 219, 216)\",\r\n  },\r\n  input: {\r\n    color: \"#084594\",\r\n    top: 1,\r\n    textAlign: \"center\",\r\n    fontSize: 24,\r\n    marginTop: 90,\r\n    fontWeight:\"bold\"\r\n  },\r\n\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 45,\r\n    backgroundColor: \"#EA5C2B\",\r\n    paddingTop: 1,\r\n    justifyContent: \"center\",\r\n    marginTop: 100,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext1: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    right: 30,\r\n    fontWeight:\"bold\"\r\n  },\r\n \r\n});\r\nconst imageUploaderStyles = StyleSheet.create({\r\n  container: {\r\n    elevation: 2,\r\n    height: 200,\r\n    width: 200,\r\n    top: 30,\r\n    backgroundColor: \"#efefef\",\r\n    position: \"relative\",\r\n    borderRadius: 999,\r\n    overflow: \"hidden\",\r\n  },\r\n  uploadBtnContainer: {\r\n    opacity: 0.7,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"lightgray\",\r\n    width: \"100%\",\r\n    height: \"25%\",\r\n  },\r\n  uploadBtn: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}