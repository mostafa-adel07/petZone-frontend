{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Constants from 'expo-constants';\nimport styled from 'styled-components/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { TypeSignup } from \"./typeSignup\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SignupUser1 = function SignupUser1(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nid = _useState2[0],\n      Setnid = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      Setcountry = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      city = _useState6[0],\n      Setcity = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      Setaddress = _useState8[1];\n\n  var _React$useState = React.useState({\n    isValidNational_ID: '',\n    isRequiredCountry: '',\n    isRequiredCity: '',\n    isRequiredAddress: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data1 = _React$useState2[0],\n      setData1 = _React$useState2[1];\n\n  var _route$params = route.params,\n      isValidUser = _route$params.isValidUser,\n      isValidServiceProvider = _route$params.isValidServiceProvider,\n      username = _route$params.username,\n      phone = _route$params.phone,\n      email = _route$params.email,\n      password = _route$params.password,\n      confirm_password = _route$params.confirm_password;\n\n  var handleValidNational_ID = function handleValidNational_ID(val) {\n    if (val.trim().length !== 14) {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isValidNational_ID: false\n      }));\n    } else {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isValidNational_ID: true\n      }));\n    }\n  };\n\n  var handelRequiredCountry = function handelRequiredCountry(val) {\n    if (val === '') {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredCountry: false\n      }));\n    } else {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredCountry: true\n      }));\n    }\n  };\n\n  var handelRequiredCity = function handelRequiredCity(val) {\n    if (val === '') {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredCity: false\n      }));\n    } else {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredCity: true\n      }));\n    }\n  };\n\n  var handelRequiredAddress = function handelRequiredAddress(val) {\n    if (val === '') {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredAddress: false\n      }));\n    } else {\n      setData1(_objectSpread(_objectSpread({}, data1), {}, {\n        isRequiredAddress: true\n      }));\n    }\n  };\n\n  function Type() {\n    if (isValidUser) {\n      navigation.navigate('Signup2', {\n        username: username,\n        phone: phone,\n        email: email,\n        password: password,\n        confirm_password: confirm_password,\n        nid: nid,\n        country: country,\n        city: city,\n        address: address,\n        isValidUser: isValidUser,\n        isValidServiceProvider: isValidServiceProvider\n      });\n    } else {\n      navigation.navigate('Signup3', {\n        username: username,\n        phone: phone,\n        email: email,\n        password: password,\n        confirm_password: confirm_password,\n        nid: nid,\n        country: country,\n        city: city,\n        address: address,\n        isValidUser: isValidUser,\n        isValidServiceProvider: isValidServiceProvider\n      });\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.container1,\n    children: [_jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter National ID\",\n        onChangeText: function onChangeText(Nid) {\n          return Setnid(Nid);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handleValidNational_ID(e.nativeEvent.text);\n        },\n        keyboardType: \"numeric\",\n        placeholderTextColor: \"gray\"\n      }), _jsx(AntDesign, {\n        style: styles.icon1,\n        name: \"idcard\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data1.isValidNational_ID ? null : _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        style: styles.errormsg1,\n        children: \"National_ID must be 14 numeric value\"\n      })\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter Country\",\n        onChangeText: function onChangeText(country) {\n          return Setcountry(country);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredCountry(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      }), _jsx(Entypo, {\n        style: styles.icon1,\n        name: \"flag\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data1.isRequiredCountry ? null : _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        style: styles.errormsg,\n        children: \"Reuired Input\"\n      })\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter City\",\n        onChangeText: function onChangeText(city) {\n          return Setcity(city);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredCity(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      }), _jsx(MaterialCommunityIcons, {\n        style: styles.icon1,\n        name: \"city\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data1.isRequiredCity ? null : _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        style: styles.errormsg,\n        children: \"Reuired Input\"\n      })\n    }), _jsxs(View, {\n      style: styles.input,\n      children: [_jsx(TextInput, {\n        style: styles.inputtext1,\n        placeholder: \"Enter Address\",\n        onChangeText: function onChangeText(address) {\n          return Setaddress(address);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handelRequiredAddress(e.nativeEvent.text);\n        },\n        placeholderTextColor: \"gray\"\n      }), _jsx(AntDesign, {\n        style: styles.icon1,\n        name: \"home\",\n        size: 24,\n        color: \"gray\"\n      })]\n    }), data1.isRequiredAddress ? null : _jsx(View, {\n      style: styles.error,\n      children: _jsx(Text, {\n        style: styles.errormsg,\n        children: \"Reuired Input\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttoncontainer1,\n      onPress: Type,\n      children: _jsx(Text, {\n        style: styles.buttontext1,\n        children: \"Next\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container1: {\n    backgroundColor: 'white',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 120,\n    paddingBottom: 60\n  },\n  input: {\n    flexDirection: 'row'\n  },\n  inputtext1: {\n    borderRadius: 9,\n    width: 300,\n    height: 40,\n    borderColor: '#ff00ff',\n    borderWidth: 1,\n    paddingHorizontal: 35,\n    fontsize: 30,\n    color: 'black',\n    marginVertical: 10\n  },\n  icon1: {\n    position: 'absolute',\n    top: 18,\n    left: 5\n  },\n  errormsg: {\n    bottom: 5,\n    paddingRight: 199,\n    color: 'red'\n  },\n  errormsg1: {\n    bottom: 5,\n    paddingRight: 50,\n    color: 'red'\n  },\n  buttoncontainer1: {\n    borderRadius: 15,\n    width: 150,\n    height: 45,\n    backgroundColor: '#ff00ff',\n    paddingTop: 1,\n    justifyContent: 'center',\n    marginTop: 30,\n    paddingLeft: 60\n  },\n  buttontext1: {\n    textAlign: 'center',\n    color: 'black',\n    fontSize: 20,\n    right: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/101/Desktop/New folder/PetZone/components/screens/SignupUser1.js"],"names":["React","useState","Constants","styled","Ionicons","MaterialIcons","MaterialCommunityIcons","Entypo","Feather","AntDesign","TypeSignup","SignupUser1","route","navigation","nid","Setnid","country","Setcountry","city","Setcity","address","Setaddress","isValidNational_ID","isRequiredCountry","isRequiredCity","isRequiredAddress","data1","setData1","params","isValidUser","isValidServiceProvider","username","phone","email","password","confirm_password","handleValidNational_ID","val","trim","length","handelRequiredCountry","handelRequiredCity","handelRequiredAddress","Type","navigate","styles","container1","input","inputtext1","Nid","e","nativeEvent","text","icon1","error","errormsg1","errormsg","buttoncontainer1","buttontext1","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","paddingTop","paddingBottom","flexDirection","borderRadius","width","height","borderColor","borderWidth","paddingHorizontal","fontsize","color","marginVertical","position","top","left","bottom","paddingRight","marginTop","paddingLeft","textAlign","fontSize","right"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Button,\r\n} from 'react-native';\r\nimport { TextInput,ScrollView } from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport styled from 'styled-components/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport {TypeSignup} from './typeSignup';\r\nexport const SignupUser1 = ({ route, navigation }) => {\r\n  const [nid, Setnid] = useState('');\r\n  const [country, Setcountry] = useState('');\r\n  const [city, Setcity] = useState('');\r\n  const [address, Setaddress] = useState('');\r\n  const [data1, setData1] = React.useState({\r\n    isValidNational_ID: '',\r\n    isRequiredCountry: '',\r\n    isRequiredCity: '',\r\n    isRequiredAddress: '',\r\n  });\r\n  const {isValidUser,isValidServiceProvider,username, phone, email, password, confirm_password } = route.params;\r\n  //console.log(isValidUser,isValidServiceProvider,username, phone, email, password, confirm_password);\r\n  const handleValidNational_ID = (val) => {\r\n    if (val.trim().length !== 14) {\r\n      setData1({\r\n        ...data1,\r\n        isValidNational_ID: false,\r\n      });\r\n    } else {\r\n      setData1({\r\n        ...data1,\r\n        isValidNational_ID: true,\r\n      });\r\n    }\r\n  };\r\n   const handelRequiredCountry = (val) => {\r\n    if (val === '') {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredCountry: false,\r\n      });\r\n    } else {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredCountry: true,\r\n      });\r\n    }\r\n  };\r\n  const handelRequiredCity = (val) => {\r\n    if (val === '') {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredCity: false,\r\n      });\r\n    } else {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredCity: true,\r\n      });\r\n    }\r\n  };\r\n  const handelRequiredAddress = (val) => {\r\n    if (val === '') {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredAddress: false,\r\n      });\r\n    } else {\r\n      setData1({\r\n        ...data1,\r\n        isRequiredAddress: true,\r\n      });\r\n    }\r\n  };\r\n function Type(){\r\n   if(isValidUser){\r\n      \r\n     navigation.navigate('Signup2', {\r\n            username: username,\r\n            phone: phone,\r\n            email: email,\r\n            password: password,\r\n            confirm_password: confirm_password,\r\n            nid: nid,\r\n            country: country,\r\n            city: city,\r\n            address: address,\r\n            isValidUser:isValidUser,\r\n            isValidServiceProvider:isValidServiceProvider,\r\n   })\r\n   } else {\r\n         \r\n      navigation.navigate('Signup3',{\r\n      username: username,\r\n      phone: phone,\r\n      email: email,\r\n      password: password,\r\n      confirm_password: confirm_password,\r\n      nid: nid,\r\n      country: country,\r\n      city: city,\r\n      address: address,\r\n      isValidUser:isValidUser,\r\n      isValidServiceProvider:isValidServiceProvider,\r\n   })\r\n }}\r\n \r\n\r\n  return (\r\n   <View style={styles.container1}>\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter National ID\"\r\n          onChangeText={(Nid) => Setnid(Nid)}\r\n          onEndEditing={(e) => handleValidNational_ID(e.nativeEvent.text)}\r\n          keyboardType=\"numeric\"\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n        <AntDesign style={styles.icon1} name=\"idcard\" size={24} color=\"gray\" />\r\n      </View>\r\n      {data1.isValidNational_ID ? null :\r\n        <View style={styles.error}>\r\n          <Text style={styles.errormsg1}>\r\n            National_ID must be 14 numeric value\r\n          </Text>\r\n        </View>\r\n      }\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Country\"\r\n          onChangeText={(country) => Setcountry(country)}\r\n          onEndEditing={(e) => handelRequiredCountry(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n        <Entypo style={styles.icon1} name=\"flag\" size={24} color=\"gray\" />\r\n      </View>\r\n      {data1.isRequiredCountry ? null :\r\n        <View style={styles.error}>\r\n          <Text style={styles.errormsg}>Reuired Input</Text>\r\n        </View>\r\n      }\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter City\"\r\n          onChangeText={(city) => Setcity(city)}\r\n          onEndEditing={(e) => handelRequiredCity(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n        <MaterialCommunityIcons\r\n          style={styles.icon1}\r\n          name=\"city\"\r\n          size={24}\r\n          color=\"gray\"\r\n        />\r\n      </View>\r\n       {data1.isRequiredCity ? null :\r\n        <View style={styles.error}>\r\n          <Text style={styles.errormsg}>Reuired Input</Text>\r\n        </View>\r\n      }\r\n      <View style={styles.input}>\r\n        <TextInput\r\n          style={styles.inputtext1}\r\n          placeholder=\"Enter Address\"\r\n          onChangeText={(address) => Setaddress(address)}\r\n          onEndEditing={(e) => handelRequiredAddress(e.nativeEvent.text)}\r\n          placeholderTextColor=\"gray\"\r\n        />\r\n        <AntDesign style={styles.icon1} name=\"home\" size={24} color=\"gray\" />\r\n      </View>\r\n      {data1.isRequiredAddress ? null :\r\n        <View style={styles.error}>\r\n          <Text style={styles.errormsg}>Reuired Input</Text>\r\n        </View>\r\n       }\r\n\r\n      <TouchableOpacity\r\n        style={styles.buttoncontainer1}\r\n        onPress={Type}>\r\n        <Text style={styles.buttontext1}>Next</Text>\r\n      </TouchableOpacity>\r\n   </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container1: {\r\n    backgroundColor: 'white',\r\n    flex:1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n     paddingTop:120,\r\n    paddingBottom:60,\r\n  },\r\n  input: {\r\n    flexDirection: 'row',\r\n  },\r\n  inputtext1: {\r\n    borderRadius: 9,\r\n    width: 300,\r\n    height: 40,\r\n    borderColor: '#ff00ff',\r\n    borderWidth: 1,\r\n    paddingHorizontal: 35,\r\n    fontsize: 30,\r\n    color: 'black',\r\n    marginVertical: 10,\r\n  },\r\n  icon1: {\r\n    position: 'absolute',\r\n    top: 18,\r\n    left: 5,\r\n  },\r\n  errormsg: {\r\n    bottom: 5,\r\n    paddingRight: 199,\r\n    color: 'red',\r\n  },\r\n   errormsg1: {\r\n    bottom: 5,\r\n    paddingRight:50,\r\n    color: 'red',\r\n  },\r\n  buttoncontainer1: {\r\n    borderRadius: 15,\r\n    width: 150,\r\n    height: 45,\r\n    backgroundColor: '#ff00ff',\r\n    paddingTop: 1,\r\n    justifyContent: 'center',\r\n    marginTop: 30,\r\n    paddingLeft: 60,\r\n  },\r\n  buttontext1: {\r\n    textAlign: 'center',\r\n    color: 'black',\r\n    fontSize: 20,\r\n    right: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}